{"ast":null,"code":"var _jsxFileName = \"/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn,\n      setPostList: setPostList,\n      postList: filteredPosts(),\n      setUserPostsOnly: setUserPostsOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"keywords\",\n        children: \"Search For a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"keywords\",\n        type: \"text\",\n        placeholder: \"Enter Post Title\",\n        value: searchTerm,\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), isLoggedIn ? // if logged in, a button displays allowing user to toggle between user posts and all posts\n      userPostsOnly ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setUserPostsOnly(!userPostsOnly);\n        },\n        children: \"Show all posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setUserPostsOnly(!userPostsOnly);\n        },\n        children: \"Show user posts/messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logged-in-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageView\",\n        children: userPostsOnly ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Messages for User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GetUserMessages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostView, {\n        setSearchResults: setSearchResults,\n        postList: filteredPosts(),\n        setEditablePost: setEditablePost,\n        setPostList: setPostList,\n        isLoggedIn: isLoggedIn,\n        userPostsOnly: userPostsOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(PostForm, {\n        addNewPost: addNewPost,\n        ...editablePost,\n        setEditablePost: setEditablePost,\n        updatePost: updatePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"90duiPYDy6E/EagW+K0wF01kp1k=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/index.js"],"names":["React","useState","useEffect","ReactDOM","App","isLoggedIn","setIsLoggedIn","getToken","setPostList","filteredPosts","setUserPostsOnly","searchTerm","event","setSearchTerm","target","value","userPostsOnly","setSearchResults","setEditablePost","addNewPost","editablePost","updatePost","render","document","getElementById"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAC,CAACM,QAAQ,EAAX,CAA5C;AACA,sBACI;AAAA,4BACA,QAAC,MAAD;AACE,MAAA,UAAU,EAAEF,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,WAAW,EAAEE,WAHf;AAIE,MAAA,QAAQ,EAAEC,aAAa,EAJzB;AAKE,MAAA,gBAAgB,EAAEC;AALpB;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,KAAK,EAAGC,UAJV;AAKE,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBC,UAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,cAFF,EAUGV,UAAU,GAAK;AACdW,MAAAA,aAAa,gBACb;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBN,UAAAA,gBAAgB,CAAC,CAACM,aAAF,CAAhB;AAAiC,SADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,gBAIb;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBN,UAAAA,gBAAgB,CAAC,CAACM,aAAF,CAAhB;AAAiC,SADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALS,GAMkE,IAhB/E;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAyBA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACQA,aAAa,gBAAG;AAAA,kCACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADY,eAEZ,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBAFY;AAAA,wBAAH,GAIX;AALV;AAAA;AAAA;AAAA;AAAA,cADA,eAQA,QAAC,QAAD;AAAU,QAAA,gBAAgB,EAAEC,gBAA5B;AACgB,QAAA,QAAQ,EAAER,aAAa,EADvC;AAEgB,QAAA,eAAe,EAAES,eAFjC;AAGgB,QAAA,WAAW,EAAEV,WAH7B;AAIgB,QAAA,UAAU,EAAEH,UAJ5B;AAKgB,QAAA,aAAa,EAAEW;AAL/B;AAAA;AAAA;AAAA;AAAA,cARA,EAeKX,UAAU,gBACX,QAAC,QAAD;AAAU,QAAA,UAAU,EAAGc,UAAvB;AAAA,WACcC,YADd;AAEU,QAAA,eAAe,EAAEF,eAF3B;AAGU,QAAA,UAAU,EAAEG;AAHtB;AAAA;AAAA;AAAA;AAAA,cADW,GAI4B,IAnB3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBA;AAAA,kBADJ;AAmDC,CAtDL;;GAAMjB,G;;KAAAA,G;AAyDND,QAAQ,CAACmB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(!!getToken());\n    return (\n        <>\n        <Header\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          setPostList={setPostList}\n          postList={filteredPosts()}\n          setUserPostsOnly={setUserPostsOnly} />\n        <div id=\"search\" >\n          <label htmlFor=\"keywords\">Search For a Post</label>\n          <input \n            id=\"keywords\" \n            type=\"text\" \n            placeholder=\"Enter Post Title\" \n            value={ searchTerm } \n            onChange={(event) => {\n              setSearchTerm(event.target.value);\n            }} />\n          {isLoggedIn ? ( // if logged in, a button displays allowing user to toggle between user posts and all posts\n            userPostsOnly ? (\n            <button onClick={() => {\n              setUserPostsOnly(!userPostsOnly)}}>Show all posts</button>\n            ) : (\n            <button onClick={() => {\n              setUserPostsOnly(!userPostsOnly)}}>Show user posts/messages</button>)) : null}\n        </div> \n        <div className=\"logged-in-view\">\n        <div className=\"messageView\">{\n                userPostsOnly ? <> \n                    <h2>Messages for User</h2>\n                    <GetUserMessages />\n                    </>\n                : null\n            }</div>\n        <PostView setSearchResults={setSearchResults}\n                        postList={filteredPosts()}\n                        setEditablePost={setEditablePost}\n                        setPostList={setPostList}\n                        isLoggedIn={isLoggedIn}\n                        userPostsOnly={userPostsOnly}\n                                    />                \n            {isLoggedIn ?\n            <PostForm addNewPost={ addNewPost }\n                      {...editablePost}\n                      setEditablePost={setEditablePost}\n                      updatePost={updatePost} /> : null\n          }\n            \n        </div>\n        </>\n      );\n    };\n    \n \nReactDOM.render(<App />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}