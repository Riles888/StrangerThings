{"ast":null,"code":"var _jsxFileName = \"/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderPosts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [author, setAuthor] = useState('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState('');\n  const accessToken = localStorage.getItem('token'); // Axios.interceptors.request.use(\n  //     config => {\n  //       config.headers.authorization = `Bearer ${accessToken}`;\n  //       return config;\n  //     },\n  //     error => {\n  //       return Promise.reject(error);\n  //     }\n  //   );\n\n  const userPost = {\n    title: title,\n    description: description,\n    price: price,\n    author: author,\n    location: location,\n    willDeliver: willDeliver\n  }; // console.log('Title: ', title)\n  // console.log('Description: ', description)\n  // console.log('Price: ', price)\n  // console.log('Author: ', author)\n  // console.log('Location: ', location)\n  // console.log('willDeliver: ', willDeliver)\n  // title, description, price, author.username, location, willDeliver\n  // const addPost = async () => {\n  //         localStorage.getItem('token');\n  //         let response = await Axios.post(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\", userPost, axiosConfig)\n  //         console.log('Add Post Request: ', response);\n  //         console.log('userPosts: ', userPost)\n  // }\n\n  const addPost = async () => {\n    let response = await fetch(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify({\n        post: userPost\n      })\n    });\n    const data = await response.json();\n    console.log('Data: ', data);\n    return data;\n  };\n\n  const editPost = async () => {\n    let res = await fetch(`https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts/`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n    const id = data.data.posts._id;\n    console.log('data: ', id);\n    let response = await fetch(`https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      body: JSON.stringify({\n        post: userPost\n      })\n    }); // const data = await response.json()\n    // console.log('Edit postData: ', data)\n    // const id = data.data.posts._id\n    // console.log('_id: ', id)\n  };\n\n  const getPost = async () => {\n    localStorage.getItem('token');\n    let res = await Axios.get(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\");\n    console.log('Response Object: ', res);\n    const results = res.data.data.posts;\n    console.log('Posts: ', results);\n    setPosts(results);\n  }; // const handleDelete = async () => {}\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"header-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Create Posts: \\xA0 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"Post Title\",\n          name: \"title\",\n          onChange: e => {\n            setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"Post Description\",\n          name: \"description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"Post Price\",\n          name: \"price\",\n          onChange: e => {\n            setPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"Post Author\",\n          name: \"author\",\n          onChange: e => {\n            setAuthor(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"Post Location\",\n          name: \"location\",\n          onChange: e => {\n            setLocation(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"header-search\",\n          placeholder: \"willDeliver: true or false\",\n          name: \"willDeliver\",\n          onChange: e => {\n            setWillDeliver(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: () => addPost(),\n          value: \"Add Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: () => editPost(),\n          value: \"Edit Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [posts.map((post, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Description: \", post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Price: \", post.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Author: \", post.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Location: \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" WillDeliver: \", post.willDeliver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 20\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: () => getPost(),\n        value: \"Show Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(renderPosts, \"AMc6TK3MEyRGs03HdHfuFSeup6I=\");\n\nexport default renderPosts;","map":{"version":3,"sources":["/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/components/Posts.js"],"names":["React","useState","Axios","renderPosts","posts","setPosts","title","setTitle","description","setDescription","price","setPrice","author","setAuthor","location","setLocation","willDeliver","setWillDeliver","accessToken","localStorage","getItem","userPost","addPost","response","fetch","method","headers","body","JSON","stringify","post","data","json","console","log","editPost","res","id","_id","getPost","get","results","e","target","value","map","idx","username"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Axios from 'axios';\n\n\nfunction renderPosts() {\n    const [posts, setPosts] = useState([]);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [author, setAuthor] = useState('');\n    const [location, setLocation] = useState('');\n    const [willDeliver, setWillDeliver] = useState('');\n\n\n    const accessToken = localStorage.getItem('token');\n\n    // Axios.interceptors.request.use(\n    //     config => {\n    //       config.headers.authorization = `Bearer ${accessToken}`;\n    //       return config;\n    //     },\n    //     error => {\n    //       return Promise.reject(error);\n    //     }\n    //   );\n\n    const userPost = {\n        title: title,\n        description: description,\n        price: price,\n        author: author,\n        location: location,\n        willDeliver: willDeliver,\n    }\n\n    // console.log('Title: ', title)\n    // console.log('Description: ', description)\n    // console.log('Price: ', price)\n    // console.log('Author: ', author)\n    // console.log('Location: ', location)\n    // console.log('willDeliver: ', willDeliver)\n\n \n    // title, description, price, author.username, location, willDeliver\n\n    // const addPost = async () => {\n    //         localStorage.getItem('token');\n    //         let response = await Axios.post(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\", userPost, axiosConfig)\n    //         console.log('Add Post Request: ', response);\n\n    //         console.log('userPosts: ', userPost)\n    // }\n\n    const addPost = async () => {\n        let response = await fetch(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\", \n        {\n         method: \"POST\",\n         headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`,\n            },\n            body: JSON.stringify({\n                post: userPost\n            })\n        })\n\n        const data = await response.json()\n        console.log('Data: ', data)\n        return data\n}\n\n    const editPost = async () => {\n        \n\n        let res = await fetch(`https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts/`, \n        {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`\n        },\n    })\n        const data = await res.json()\n        console.log(data)\n        const id = data.data.posts._id\n        console.log('data: ', id)\n\n        let response = await fetch(`https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts/${id}`, \n        {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`\n        },\n        body: JSON.stringify({\n            post: userPost\n        })\n    })\n        // const data = await response.json()\n        // console.log('Edit postData: ', data)\n\n        // const id = data.data.posts._id\n        // console.log('_id: ', id)\n}\n\n    const getPost = async () => {\n            localStorage.getItem('token');\n            let res = await Axios.get(\"https://strangers-things.herokuapp.com/api/2104-uic-web-ft/posts\") \n            console.log('Response Object: ', res)\n\n            const results = res.data.data.posts\n            console.log('Posts: ', results)\n\n            setPosts(results);\n    \n        }\n    \n    // const handleDelete = async () => {}\n       \n  \n    return (\n        <main>\n            <div className= \"Post Results\"> \n                <form> \n                <label htmlFor=\"header-search\">\n                    <br></br>\n                    <span className=\"visually-hidden\">Create Posts: &nbsp; </span>\n                </label>\n                    <br></br>\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"Post Title\"\n                        name=\"title\" \n                        onChange ={(e) => {\n                            setTitle(e.target.value);\n                        }}\n                    />\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"Post Description\"\n                        name=\"description\" \n                        onChange ={(e) => {\n                            setDescription(e.target.value);\n                        }}\n                    />\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"Post Price\"\n                        name=\"price\"\n                        onChange ={(e) => {\n                            setPrice(e.target.value);\n                        }} \n                    />\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"Post Author\"\n                        name=\"author\" \n                        onChange ={(e) => {\n                            setAuthor(e.target.value);\n                        }}\n                    />\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"Post Location\"\n                        name=\"location\" \n                        onChange ={(e) => {\n                            setLocation(e.target.value);\n                        }}\n                    />\n                    <br></br>\n                    <input\n                        type=\"text\"\n                        id=\"header-search\"\n                        placeholder=\"willDeliver: true or false\"\n                        name=\"willDeliver\" \n                        onChange ={(e) => {\n                            setWillDeliver(e.target.value);\n                        }}\n                    />\n                    <br></br>\n                    <br></br>\n                    <input type=\"button\" onClick={() => addPost()} value= \"Add Posts\"/>\n                    <input type=\"button\" onClick={() => editPost()} value= \"Edit Posts\"/>\n                </form> \n                <br/><br/>\n            </div>\n\n            <div>\n                {posts.map((post, idx) => (\n                   <div key={idx}> \n                        <h3>Title: {post.title}</h3>\n                        <h3>Description: {post.description}</h3>\n                        <br></br>\n                        <p> Price: {post.price}</p>\n                        <p> Author: {post.author.username}</p>\n                        <p> Location: {post.location}</p>\n                        <p> WillDeliver: {post.willDeliver}</p>\n                        <br></br>\n                    </div>\n                ))}\n                <input type=\"button\" onClick={() => getPost()} value= \"Show Posts\"/>\n            </div> \n        </main>    \n          );\n    }\n\n\nexport default renderPosts;"]},"metadata":{},"sourceType":"module"}