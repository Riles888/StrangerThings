{"ast":null,"code":"var _jsxFileName = \"/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = ({\n  type,\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\n  const oppositeType = type === 'login' ? 'register' : 'login';\n  const history = useHistory();\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log('response: ', response);\n    const {\n      data\n    } = await response.json();\n    console.log('{data}: ', {\n      data\n    });\n    const token = data === null || data === void 0 ? void 0 : data.token;\n    console.log('token: ', token);\n\n    if (token) {\n      localStorage.setItem('token', token);\n      setToken(token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }); // const contentType = response.headers.get('Content-Type')\n\n      const {\n        data\n      } = await response.json();\n      console.log('data: ', data);\n      setUser(data);\n      setUsername('');\n      setPassword('');\n      history.push('./posts');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value),\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${oppositeType}`,\n      children: oppositeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/Riley/Desktop/UIC_Code/course_work/StrangersThings/src/components/Login.js"],"names":["React","useState","Link","useHistory","AccountForm","type","setToken","setUser","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","history","handleSubmit","ev","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","user","data","json","token","localStorage","setItem","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EACEC,UADF,QAEO,kBAFP;;;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AAAA;;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMW,KAAK,GAAGP,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,UAA3C;AACA,QAAMQ,aAAa,GAAGR,IAAI,KAAK,OAAT,GAAmB,UAAnB,GAAgC,OAAtD;AACA,QAAMS,YAAY,GAAGT,IAAI,KAAK,OAAT,GAAmB,UAAnB,GAAgC,OAArD;AACA,QAAMU,OAAO,GAAGZ,UAAU,EAA1B;;AAGA,QAAMa,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjCA,IAAAA,EAAE,CAACC,cAAH;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,QAA1B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BV,QAA1B;AACA,UAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAE,uEAAsEjB,IAAK,EAA7E,EAAgF;AAC1GkB,MAAAA,MAAM,EAAE,MADkG;AAE1GC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiG;AAK1GC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAE;AACJpB,UAAAA,QADI;AAEJE,UAAAA;AAFI;AADa,OAAf;AALoG,KAAhF,CAA5B;AAYAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AACA,UAAM;AAACQ,MAAAA;AAAD,QAAS,MAAMR,QAAQ,CAACS,IAAT,EAArB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB;AAACS,MAAAA;AAAD,KAAxB;AACA,UAAME,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAApB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBW,KAAvB;;AACA,QAAIA,KAAJ,EAAW;AACTC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAzB,MAAAA,QAAQ,CAACyB,KAAD,CAAR;AACA,YAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,wEAAF,EAA2E;AACrGC,QAAAA,MAAM,EAAE,KAD6F;AAErGC,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASO,KAAM;AAD1B;AAF4F,OAA3E,CAA5B,CAHS,CAST;;AACA,YAAM;AAACF,QAAAA;AAAD,UAAS,MAAMR,QAAQ,CAACS,IAAT,EAArB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBS,IAAtB;AACAtB,MAAAA,OAAO,CAACsB,IAAD,CAAP;AAEFpB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,MAAAA,OAAO,CAACmB,IAAR,CAAa,SAAb;AACC;AACF,GAvCD;;AAyCA,sBAAO;AAAA,4BACL;AAAA,gBAAKtB;AAAL;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAER,QAA1B;AAAoC,QAAA,QAAQ,EAAGS,EAAD,IAAQR,WAAW,CAACQ,EAAE,CAACkB,MAAH,CAAUC,KAAX,CAAjE;AAAmF,QAAA,WAAW,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAE1B,QAA9B;AAAwC,QAAA,QAAQ,EAAGO,EAAD,IAAQN,WAAW,CAACM,EAAE,CAACkB,MAAH,CAAUC,KAAX,CAArE;AAAuF,QAAA,WAAW,EAAC;AAAnG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBxB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAOL,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,IAAGE,YAAa,EAA3B;AAAA,gBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,YAPK;AAAA,kBAAP;AASD,CA3DD;;GAAMT,W;UAMYD,U;;;KANZC,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Link, \n  useHistory\n} from 'react-router-dom'; \n\nconst AccountForm = ({type, setToken, setUser}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\n  const oppositeType = type === 'login' ? 'register' : 'login';\n  const history = useHistory();\n\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, { \n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log('response: ', response);\n    const {data} = await response.json();\n    console.log('{data}: ', {data});\n    const token = data?.token;\n    console.log('token: ', token);\n    if (token) {\n      localStorage.setItem('token', token)\n      setToken(token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      // const contentType = response.headers.get('Content-Type')\n      const {data} = await response.json();\n      console.log('data: ', data);\n      setUser(data);\n    \n    setUsername('');\n    setPassword('');\n    history.push('./posts')\n    }\n  }\n\n  return <>\n    <h2>{title}</h2>\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={username} onChange={(ev) => setUsername(ev.target.value)}placeholder=\"username\"></input>\n      <input type=\"password\" value={password} onChange={(ev) => setPassword(ev.target.value)}placeholder=\"password\"></input>\n      <button type=\"submit\">{title}</button>\n    </form>    \n    <Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\n  </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}