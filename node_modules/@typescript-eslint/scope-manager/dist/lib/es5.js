"use strict";
// THIS CODE WAS AUTOMATICALLY GENERATED
// DO NOT EDIT THIS CODE BY HAND
// YOU CAN REGENERATE IT USING yarn generate:lib
Object.defineProperty(exports, "__esModule", { value: true });
exports.es5 = void 0;
<<<<<<< HEAD
const base_config_1 = require("./base-config");
exports.es5 = {
    Symbol: base_config_1.TYPE,
    PropertyKey: base_config_1.TYPE,
    PropertyDescriptor: base_config_1.TYPE,
    PropertyDescriptorMap: base_config_1.TYPE,
    Object: base_config_1.TYPE_VALUE,
    ObjectConstructor: base_config_1.TYPE,
    Function: base_config_1.TYPE_VALUE,
    FunctionConstructor: base_config_1.TYPE,
    ThisParameterType: base_config_1.TYPE,
    OmitThisParameter: base_config_1.TYPE,
    CallableFunction: base_config_1.TYPE,
    NewableFunction: base_config_1.TYPE,
    IArguments: base_config_1.TYPE,
    String: base_config_1.TYPE_VALUE,
    StringConstructor: base_config_1.TYPE,
    Boolean: base_config_1.TYPE_VALUE,
    BooleanConstructor: base_config_1.TYPE,
    Number: base_config_1.TYPE_VALUE,
    NumberConstructor: base_config_1.TYPE,
    TemplateStringsArray: base_config_1.TYPE,
    ImportMeta: base_config_1.TYPE,
    Math: base_config_1.TYPE_VALUE,
    Date: base_config_1.TYPE_VALUE,
    DateConstructor: base_config_1.TYPE,
    RegExpMatchArray: base_config_1.TYPE,
    RegExpExecArray: base_config_1.TYPE,
    RegExp: base_config_1.TYPE_VALUE,
    RegExpConstructor: base_config_1.TYPE,
    Error: base_config_1.TYPE_VALUE,
    ErrorConstructor: base_config_1.TYPE,
    EvalError: base_config_1.TYPE_VALUE,
    EvalErrorConstructor: base_config_1.TYPE,
    RangeError: base_config_1.TYPE_VALUE,
    RangeErrorConstructor: base_config_1.TYPE,
    ReferenceError: base_config_1.TYPE_VALUE,
    ReferenceErrorConstructor: base_config_1.TYPE,
    SyntaxError: base_config_1.TYPE_VALUE,
    SyntaxErrorConstructor: base_config_1.TYPE,
    TypeError: base_config_1.TYPE_VALUE,
    TypeErrorConstructor: base_config_1.TYPE,
    URIError: base_config_1.TYPE_VALUE,
    URIErrorConstructor: base_config_1.TYPE,
    JSON: base_config_1.TYPE_VALUE,
    ReadonlyArray: base_config_1.TYPE,
    ConcatArray: base_config_1.TYPE,
    Array: base_config_1.TYPE_VALUE,
    ArrayConstructor: base_config_1.TYPE,
    TypedPropertyDescriptor: base_config_1.TYPE,
    ClassDecorator: base_config_1.TYPE,
    PropertyDecorator: base_config_1.TYPE,
    MethodDecorator: base_config_1.TYPE,
    ParameterDecorator: base_config_1.TYPE,
    PromiseConstructorLike: base_config_1.TYPE,
    PromiseLike: base_config_1.TYPE,
    Promise: base_config_1.TYPE,
    ArrayLike: base_config_1.TYPE,
    Partial: base_config_1.TYPE,
    Required: base_config_1.TYPE,
    Readonly: base_config_1.TYPE,
    Pick: base_config_1.TYPE,
    Record: base_config_1.TYPE,
    Exclude: base_config_1.TYPE,
    Extract: base_config_1.TYPE,
    Omit: base_config_1.TYPE,
    NonNullable: base_config_1.TYPE,
    Parameters: base_config_1.TYPE,
    ConstructorParameters: base_config_1.TYPE,
    ReturnType: base_config_1.TYPE,
    InstanceType: base_config_1.TYPE,
    Uppercase: base_config_1.TYPE,
    Lowercase: base_config_1.TYPE,
    Capitalize: base_config_1.TYPE,
    Uncapitalize: base_config_1.TYPE,
    ThisType: base_config_1.TYPE,
    ArrayBuffer: base_config_1.TYPE_VALUE,
    ArrayBufferTypes: base_config_1.TYPE,
    ArrayBufferLike: base_config_1.TYPE,
    ArrayBufferConstructor: base_config_1.TYPE,
    ArrayBufferView: base_config_1.TYPE,
    DataView: base_config_1.TYPE_VALUE,
    DataViewConstructor: base_config_1.TYPE,
    Int8Array: base_config_1.TYPE_VALUE,
    Int8ArrayConstructor: base_config_1.TYPE,
    Uint8Array: base_config_1.TYPE_VALUE,
    Uint8ArrayConstructor: base_config_1.TYPE,
    Uint8ClampedArray: base_config_1.TYPE_VALUE,
    Uint8ClampedArrayConstructor: base_config_1.TYPE,
    Int16Array: base_config_1.TYPE_VALUE,
    Int16ArrayConstructor: base_config_1.TYPE,
    Uint16Array: base_config_1.TYPE_VALUE,
    Uint16ArrayConstructor: base_config_1.TYPE,
    Int32Array: base_config_1.TYPE_VALUE,
    Int32ArrayConstructor: base_config_1.TYPE,
    Uint32Array: base_config_1.TYPE_VALUE,
    Uint32ArrayConstructor: base_config_1.TYPE,
    Float32Array: base_config_1.TYPE_VALUE,
    Float32ArrayConstructor: base_config_1.TYPE,
    Float64Array: base_config_1.TYPE_VALUE,
    Float64ArrayConstructor: base_config_1.TYPE,
    Intl: base_config_1.TYPE_VALUE,
=======
exports.es5 = {
    Symbol: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Symbol',
    },
    PropertyKey: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PropertyKey',
    },
    PropertyDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PropertyDescriptor',
    },
    PropertyDescriptorMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PropertyDescriptorMap',
    },
    Object: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Object',
    },
    ObjectConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ObjectConstructor',
    },
    Function: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Function',
    },
    FunctionConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FunctionConstructor',
    },
    ThisParameterType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ThisParameterType',
    },
    OmitThisParameter: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OmitThisParameter',
    },
    CallableFunction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CallableFunction',
    },
    NewableFunction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NewableFunction',
    },
    IArguments: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IArguments',
    },
    String: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'String',
    },
    StringConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StringConstructor',
    },
    Boolean: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Boolean',
    },
    BooleanConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BooleanConstructor',
    },
    Number: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Number',
    },
    NumberConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NumberConstructor',
    },
    TemplateStringsArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TemplateStringsArray',
    },
    ImportMeta: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImportMeta',
    },
    Math: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Math',
    },
    Date: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Date',
    },
    DateConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DateConstructor',
    },
    RegExpMatchArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RegExpMatchArray',
    },
    RegExpExecArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RegExpExecArray',
    },
    RegExp: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RegExp',
    },
    RegExpConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RegExpConstructor',
    },
    Error: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Error',
    },
    ErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ErrorConstructor',
    },
    EvalError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'EvalError',
    },
    EvalErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EvalErrorConstructor',
    },
    RangeError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RangeError',
    },
    RangeErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RangeErrorConstructor',
    },
    ReferenceError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ReferenceError',
    },
    ReferenceErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReferenceErrorConstructor',
    },
    SyntaxError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SyntaxError',
    },
    SyntaxErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SyntaxErrorConstructor',
    },
    TypeError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TypeError',
    },
    TypeErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TypeErrorConstructor',
    },
    URIError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'URIError',
    },
    URIErrorConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'URIErrorConstructor',
    },
    JSON: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'JSON',
    },
    ReadonlyArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadonlyArray',
    },
    ConcatArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConcatArray',
    },
    Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Array',
    },
    ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayConstructor',
    },
    TypedPropertyDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TypedPropertyDescriptor',
    },
    ClassDecorator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ClassDecorator',
    },
    PropertyDecorator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PropertyDecorator',
    },
    MethodDecorator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MethodDecorator',
    },
    ParameterDecorator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ParameterDecorator',
    },
    PromiseConstructorLike: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PromiseConstructorLike',
    },
    PromiseLike: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PromiseLike',
    },
    Promise: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Promise',
    },
    ArrayLike: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayLike',
    },
    Partial: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Partial',
    },
    Required: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Required',
    },
    Readonly: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Readonly',
    },
    Pick: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Pick',
    },
    Record: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Record',
    },
    Exclude: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Exclude',
    },
    Extract: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Extract',
    },
    Omit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Omit',
    },
    NonNullable: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NonNullable',
    },
    Parameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Parameters',
    },
    ConstructorParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstructorParameters',
    },
    ReturnType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReturnType',
    },
    InstanceType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'InstanceType',
    },
    Uppercase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uppercase',
    },
    Lowercase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Lowercase',
    },
    Capitalize: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Capitalize',
    },
    Uncapitalize: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uncapitalize',
    },
    ThisType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ThisType',
    },
    ArrayBuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ArrayBuffer',
    },
    ArrayBufferTypes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayBufferTypes',
    },
    ArrayBufferLike: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayBufferLike',
    },
    ArrayBufferConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayBufferConstructor',
    },
    ArrayBufferView: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ArrayBufferView',
    },
    DataView: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DataView',
    },
    DataViewConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DataViewConstructor',
    },
    Int8Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Int8Array',
    },
    Int8ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Int8ArrayConstructor',
    },
    Uint8Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Uint8Array',
    },
    Uint8ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uint8ArrayConstructor',
    },
    Uint8ClampedArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Uint8ClampedArray',
    },
    Uint8ClampedArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uint8ClampedArrayConstructor',
    },
    Int16Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Int16Array',
    },
    Int16ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Int16ArrayConstructor',
    },
    Uint16Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Uint16Array',
    },
    Uint16ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uint16ArrayConstructor',
    },
    Int32Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Int32Array',
    },
    Int32ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Int32ArrayConstructor',
    },
    Uint32Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Uint32Array',
    },
    Uint32ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uint32ArrayConstructor',
    },
    Float32Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Float32Array',
    },
    Float32ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Float32ArrayConstructor',
    },
    Float64Array: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Float64Array',
    },
    Float64ArrayConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Float64ArrayConstructor',
    },
    Intl: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Intl',
    },
>>>>>>> e9ad4b14254baba7a18db55e01787715cfba094c
};
//# sourceMappingURL=es5.js.map