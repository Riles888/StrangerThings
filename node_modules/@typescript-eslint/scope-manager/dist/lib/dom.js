"use strict";
// THIS CODE WAS AUTOMATICALLY GENERATED
// DO NOT EDIT THIS CODE BY HAND
// YOU CAN REGENERATE IT USING yarn generate:lib
Object.defineProperty(exports, "__esModule", { value: true });
exports.dom = void 0;
<<<<<<< HEAD
const base_config_1 = require("./base-config");
exports.dom = {
    AddEventListenerOptions: base_config_1.TYPE,
    AddressErrors: base_config_1.TYPE,
    AesCbcParams: base_config_1.TYPE,
    AesCtrParams: base_config_1.TYPE,
    AesDerivedKeyParams: base_config_1.TYPE,
    AesGcmParams: base_config_1.TYPE,
    AesKeyAlgorithm: base_config_1.TYPE,
    AesKeyGenParams: base_config_1.TYPE,
    Algorithm: base_config_1.TYPE,
    AnalyserOptions: base_config_1.TYPE,
    AnimationEventInit: base_config_1.TYPE,
    AnimationPlaybackEventInit: base_config_1.TYPE,
    AssignedNodesOptions: base_config_1.TYPE,
    AudioBufferOptions: base_config_1.TYPE,
    AudioBufferSourceOptions: base_config_1.TYPE,
    AudioContextInfo: base_config_1.TYPE,
    AudioContextOptions: base_config_1.TYPE,
    AudioNodeOptions: base_config_1.TYPE,
    AudioParamDescriptor: base_config_1.TYPE,
    AudioProcessingEventInit: base_config_1.TYPE,
    AudioTimestamp: base_config_1.TYPE,
    AudioWorkletNodeOptions: base_config_1.TYPE,
    AuthenticationExtensionsClientInputs: base_config_1.TYPE,
    AuthenticationExtensionsClientOutputs: base_config_1.TYPE,
    AuthenticatorSelectionCriteria: base_config_1.TYPE,
    BiquadFilterOptions: base_config_1.TYPE,
    BlobPropertyBag: base_config_1.TYPE,
    ByteLengthChunk: base_config_1.TYPE,
    CacheQueryOptions: base_config_1.TYPE,
    CanvasRenderingContext2DSettings: base_config_1.TYPE,
    ChannelMergerOptions: base_config_1.TYPE,
    ChannelSplitterOptions: base_config_1.TYPE,
    ClientQueryOptions: base_config_1.TYPE,
    ClipboardEventInit: base_config_1.TYPE,
    CloseEventInit: base_config_1.TYPE,
    CompositionEventInit: base_config_1.TYPE,
    ComputedEffectTiming: base_config_1.TYPE,
    ComputedKeyframe: base_config_1.TYPE,
    ConfirmSiteSpecificExceptionsInformation: base_config_1.TYPE,
    ConstantSourceOptions: base_config_1.TYPE,
    ConstrainBooleanParameters: base_config_1.TYPE,
    ConstrainDOMStringParameters: base_config_1.TYPE,
    ConstrainDoubleRange: base_config_1.TYPE,
    ConstrainULongRange: base_config_1.TYPE,
    ConstrainVideoFacingModeParameters: base_config_1.TYPE,
    ConvolverOptions: base_config_1.TYPE,
    CredentialCreationOptions: base_config_1.TYPE,
    CredentialPropertiesOutput: base_config_1.TYPE,
    CredentialRequestOptions: base_config_1.TYPE,
    CustomEventInit: base_config_1.TYPE,
    DOMMatrix2DInit: base_config_1.TYPE,
    DOMMatrixInit: base_config_1.TYPE,
    DOMPointInit: base_config_1.TYPE,
    DOMQuadInit: base_config_1.TYPE,
    DOMRectInit: base_config_1.TYPE,
    DelayOptions: base_config_1.TYPE,
    DeviceMotionEventAccelerationInit: base_config_1.TYPE,
    DeviceMotionEventInit: base_config_1.TYPE,
    DeviceMotionEventRotationRateInit: base_config_1.TYPE,
    DeviceOrientationEventInit: base_config_1.TYPE,
    DevicePermissionDescriptor: base_config_1.TYPE,
    DocumentTimelineOptions: base_config_1.TYPE,
    DoubleRange: base_config_1.TYPE,
    DragEventInit: base_config_1.TYPE,
    DynamicsCompressorOptions: base_config_1.TYPE,
    EcKeyAlgorithm: base_config_1.TYPE,
    EcKeyGenParams: base_config_1.TYPE,
    EcKeyImportParams: base_config_1.TYPE,
    EcdhKeyDeriveParams: base_config_1.TYPE,
    EcdsaParams: base_config_1.TYPE,
    EffectTiming: base_config_1.TYPE,
    ElementCreationOptions: base_config_1.TYPE,
    ElementDefinitionOptions: base_config_1.TYPE,
    ErrorEventInit: base_config_1.TYPE,
    EventInit: base_config_1.TYPE,
    EventListenerOptions: base_config_1.TYPE,
    EventModifierInit: base_config_1.TYPE,
    EventSourceInit: base_config_1.TYPE,
    ExceptionInformation: base_config_1.TYPE,
    FilePropertyBag: base_config_1.TYPE,
    FocusEventInit: base_config_1.TYPE,
    FocusNavigationEventInit: base_config_1.TYPE,
    FocusNavigationOrigin: base_config_1.TYPE,
    FocusOptions: base_config_1.TYPE,
    FullscreenOptions: base_config_1.TYPE,
    GainOptions: base_config_1.TYPE,
    GamepadEventInit: base_config_1.TYPE,
    GetNotificationOptions: base_config_1.TYPE,
    GetRootNodeOptions: base_config_1.TYPE,
    HashChangeEventInit: base_config_1.TYPE,
    HkdfParams: base_config_1.TYPE,
    HmacImportParams: base_config_1.TYPE,
    HmacKeyAlgorithm: base_config_1.TYPE,
    HmacKeyGenParams: base_config_1.TYPE,
    IDBIndexParameters: base_config_1.TYPE,
    IDBObjectStoreParameters: base_config_1.TYPE,
    IDBVersionChangeEventInit: base_config_1.TYPE,
    IIRFilterOptions: base_config_1.TYPE,
    ImageBitmapOptions: base_config_1.TYPE,
    ImageBitmapRenderingContextSettings: base_config_1.TYPE,
    ImageEncodeOptions: base_config_1.TYPE,
    ImportMeta: base_config_1.TYPE,
    InputEventInit: base_config_1.TYPE,
    IntersectionObserverEntryInit: base_config_1.TYPE,
    IntersectionObserverInit: base_config_1.TYPE,
    JsonWebKey: base_config_1.TYPE,
    KeyAlgorithm: base_config_1.TYPE,
    KeyboardEventInit: base_config_1.TYPE,
    Keyframe: base_config_1.TYPE,
    KeyframeAnimationOptions: base_config_1.TYPE,
    KeyframeEffectOptions: base_config_1.TYPE,
    MediaElementAudioSourceOptions: base_config_1.TYPE,
    MediaEncryptedEventInit: base_config_1.TYPE,
    MediaKeyMessageEventInit: base_config_1.TYPE,
    MediaKeySystemConfiguration: base_config_1.TYPE,
    MediaKeySystemMediaCapability: base_config_1.TYPE,
    MediaQueryListEventInit: base_config_1.TYPE,
    MediaStreamAudioSourceOptions: base_config_1.TYPE,
    MediaStreamConstraints: base_config_1.TYPE,
    MediaStreamErrorEventInit: base_config_1.TYPE,
    MediaStreamEventInit: base_config_1.TYPE,
    MediaStreamTrackAudioSourceOptions: base_config_1.TYPE,
    MediaStreamTrackEventInit: base_config_1.TYPE,
    MediaTrackCapabilities: base_config_1.TYPE,
    MediaTrackConstraintSet: base_config_1.TYPE,
    MediaTrackConstraints: base_config_1.TYPE,
    MediaTrackSettings: base_config_1.TYPE,
    MediaTrackSupportedConstraints: base_config_1.TYPE,
    MessageEventInit: base_config_1.TYPE,
    MidiPermissionDescriptor: base_config_1.TYPE,
    MouseEventInit: base_config_1.TYPE,
    MultiCacheQueryOptions: base_config_1.TYPE,
    MutationObserverInit: base_config_1.TYPE,
    NavigationPreloadState: base_config_1.TYPE,
    NotificationAction: base_config_1.TYPE,
    NotificationOptions: base_config_1.TYPE,
    OfflineAudioCompletionEventInit: base_config_1.TYPE,
    OfflineAudioContextOptions: base_config_1.TYPE,
    OptionalEffectTiming: base_config_1.TYPE,
    OscillatorOptions: base_config_1.TYPE,
    PageTransitionEventInit: base_config_1.TYPE,
    PannerOptions: base_config_1.TYPE,
    PayerErrors: base_config_1.TYPE,
    PaymentCurrencyAmount: base_config_1.TYPE,
    PaymentDetailsBase: base_config_1.TYPE,
    PaymentDetailsInit: base_config_1.TYPE,
    PaymentDetailsModifier: base_config_1.TYPE,
    PaymentDetailsUpdate: base_config_1.TYPE,
    PaymentItem: base_config_1.TYPE,
    PaymentMethodChangeEventInit: base_config_1.TYPE,
    PaymentMethodData: base_config_1.TYPE,
    PaymentOptions: base_config_1.TYPE,
    PaymentRequestUpdateEventInit: base_config_1.TYPE,
    PaymentShippingOption: base_config_1.TYPE,
    PaymentValidationErrors: base_config_1.TYPE,
    Pbkdf2Params: base_config_1.TYPE,
    PerformanceObserverInit: base_config_1.TYPE,
    PeriodicWaveConstraints: base_config_1.TYPE,
    PeriodicWaveOptions: base_config_1.TYPE,
    PermissionDescriptor: base_config_1.TYPE,
    PointerEventInit: base_config_1.TYPE,
    PopStateEventInit: base_config_1.TYPE,
    PositionOptions: base_config_1.TYPE,
    PostMessageOptions: base_config_1.TYPE,
    ProgressEventInit: base_config_1.TYPE,
    PromiseRejectionEventInit: base_config_1.TYPE,
    PropertyIndexedKeyframes: base_config_1.TYPE,
    PublicKeyCredentialCreationOptions: base_config_1.TYPE,
    PublicKeyCredentialDescriptor: base_config_1.TYPE,
    PublicKeyCredentialEntity: base_config_1.TYPE,
    PublicKeyCredentialParameters: base_config_1.TYPE,
    PublicKeyCredentialRequestOptions: base_config_1.TYPE,
    PublicKeyCredentialRpEntity: base_config_1.TYPE,
    PublicKeyCredentialUserEntity: base_config_1.TYPE,
    PushPermissionDescriptor: base_config_1.TYPE,
    PushSubscriptionJSON: base_config_1.TYPE,
    PushSubscriptionOptionsInit: base_config_1.TYPE,
    QueuingStrategy: base_config_1.TYPE,
    QueuingStrategyInit: base_config_1.TYPE,
    RTCAnswerOptions: base_config_1.TYPE,
    RTCCertificateExpiration: base_config_1.TYPE,
    RTCConfiguration: base_config_1.TYPE,
    RTCDTMFToneChangeEventInit: base_config_1.TYPE,
    RTCDataChannelEventInit: base_config_1.TYPE,
    RTCDataChannelInit: base_config_1.TYPE,
    RTCDtlsFingerprint: base_config_1.TYPE,
    RTCDtlsParameters: base_config_1.TYPE,
    RTCErrorEventInit: base_config_1.TYPE,
    RTCErrorInit: base_config_1.TYPE,
    RTCIceCandidateAttributes: base_config_1.TYPE,
    RTCIceCandidateComplete: base_config_1.TYPE,
    RTCIceCandidateDictionary: base_config_1.TYPE,
    RTCIceCandidateInit: base_config_1.TYPE,
    RTCIceCandidatePair: base_config_1.TYPE,
    RTCIceCandidatePairStats: base_config_1.TYPE,
    RTCIceGatherOptions: base_config_1.TYPE,
    RTCIceParameters: base_config_1.TYPE,
    RTCIceServer: base_config_1.TYPE,
    RTCIdentityProviderOptions: base_config_1.TYPE,
    RTCInboundRTPStreamStats: base_config_1.TYPE,
    RTCLocalSessionDescriptionInit: base_config_1.TYPE,
    RTCMediaStreamTrackStats: base_config_1.TYPE,
    RTCOfferAnswerOptions: base_config_1.TYPE,
    RTCOfferOptions: base_config_1.TYPE,
    RTCOutboundRTPStreamStats: base_config_1.TYPE,
    RTCPeerConnectionIceErrorEventInit: base_config_1.TYPE,
    RTCPeerConnectionIceEventInit: base_config_1.TYPE,
    RTCRTPStreamStats: base_config_1.TYPE,
    RTCRtcpFeedback: base_config_1.TYPE,
    RTCRtcpParameters: base_config_1.TYPE,
    RTCRtpCapabilities: base_config_1.TYPE,
    RTCRtpCodecCapability: base_config_1.TYPE,
    RTCRtpCodecParameters: base_config_1.TYPE,
    RTCRtpCodingParameters: base_config_1.TYPE,
    RTCRtpContributingSource: base_config_1.TYPE,
    RTCRtpEncodingParameters: base_config_1.TYPE,
    RTCRtpFecParameters: base_config_1.TYPE,
    RTCRtpHeaderExtension: base_config_1.TYPE,
    RTCRtpHeaderExtensionCapability: base_config_1.TYPE,
    RTCRtpHeaderExtensionParameters: base_config_1.TYPE,
    RTCRtpParameters: base_config_1.TYPE,
    RTCRtpReceiveParameters: base_config_1.TYPE,
    RTCRtpRtxParameters: base_config_1.TYPE,
    RTCRtpSendParameters: base_config_1.TYPE,
    RTCRtpSynchronizationSource: base_config_1.TYPE,
    RTCRtpTransceiverInit: base_config_1.TYPE,
    RTCRtpUnhandled: base_config_1.TYPE,
    RTCSessionDescriptionInit: base_config_1.TYPE,
    RTCSrtpKeyParam: base_config_1.TYPE,
    RTCSrtpSdesParameters: base_config_1.TYPE,
    RTCSsrcRange: base_config_1.TYPE,
    RTCStats: base_config_1.TYPE,
    RTCStatsReport: base_config_1.TYPE_VALUE,
    RTCTrackEventInit: base_config_1.TYPE,
    RTCTransportStats: base_config_1.TYPE,
    ReadableStreamDefaultReadDoneResult: base_config_1.TYPE,
    ReadableStreamDefaultReadValueResult: base_config_1.TYPE,
    ReadableWritablePair: base_config_1.TYPE,
    RegistrationOptions: base_config_1.TYPE,
    RequestInit: base_config_1.TYPE,
    ResizeObserverOptions: base_config_1.TYPE,
    ResponseInit: base_config_1.TYPE,
    RsaHashedImportParams: base_config_1.TYPE,
    RsaHashedKeyAlgorithm: base_config_1.TYPE,
    RsaHashedKeyGenParams: base_config_1.TYPE,
    RsaKeyAlgorithm: base_config_1.TYPE,
    RsaKeyGenParams: base_config_1.TYPE,
    RsaOaepParams: base_config_1.TYPE,
    RsaOtherPrimesInfo: base_config_1.TYPE,
    RsaPssParams: base_config_1.TYPE,
    SVGBoundingBoxOptions: base_config_1.TYPE,
    ScrollIntoViewOptions: base_config_1.TYPE,
    ScrollOptions: base_config_1.TYPE,
    ScrollToOptions: base_config_1.TYPE,
    SecurityPolicyViolationEventInit: base_config_1.TYPE,
    ShadowRootInit: base_config_1.TYPE,
    ShareData: base_config_1.TYPE,
    SpeechRecognitionErrorEventInit: base_config_1.TYPE,
    SpeechRecognitionEventInit: base_config_1.TYPE,
    SpeechSynthesisErrorEventInit: base_config_1.TYPE,
    SpeechSynthesisEventInit: base_config_1.TYPE,
    StaticRangeInit: base_config_1.TYPE,
    StereoPannerOptions: base_config_1.TYPE,
    StorageEstimate: base_config_1.TYPE,
    StorageEventInit: base_config_1.TYPE,
    StoreExceptionsInformation: base_config_1.TYPE,
    StoreSiteSpecificExceptionsInformation: base_config_1.TYPE,
    StreamPipeOptions: base_config_1.TYPE,
    TextDecodeOptions: base_config_1.TYPE,
    TextDecoderOptions: base_config_1.TYPE,
    TextEncoderEncodeIntoResult: base_config_1.TYPE,
    TouchEventInit: base_config_1.TYPE,
    TouchInit: base_config_1.TYPE,
    TrackEventInit: base_config_1.TYPE,
    Transformer: base_config_1.TYPE,
    TransitionEventInit: base_config_1.TYPE,
    UIEventInit: base_config_1.TYPE,
    ULongRange: base_config_1.TYPE,
    UnderlyingSink: base_config_1.TYPE,
    UnderlyingSource: base_config_1.TYPE,
    VRDisplayEventInit: base_config_1.TYPE,
    VRLayer: base_config_1.TYPE,
    VRStageParameters: base_config_1.TYPE,
    WaveShaperOptions: base_config_1.TYPE,
    WebGLContextAttributes: base_config_1.TYPE,
    WebGLContextEventInit: base_config_1.TYPE,
    WheelEventInit: base_config_1.TYPE,
    WorkerOptions: base_config_1.TYPE,
    WorkletOptions: base_config_1.TYPE,
    EventListener: base_config_1.TYPE,
    XPathNSResolver: base_config_1.TYPE,
    ANGLE_instanced_arrays: base_config_1.TYPE,
    AbortController: base_config_1.TYPE_VALUE,
    AbortSignalEventMap: base_config_1.TYPE,
    AbortSignal: base_config_1.TYPE_VALUE,
    AbstractRange: base_config_1.TYPE_VALUE,
    AbstractWorkerEventMap: base_config_1.TYPE,
    AbstractWorker: base_config_1.TYPE,
    AesCfbParams: base_config_1.TYPE,
    AesCmacParams: base_config_1.TYPE,
    AnalyserNode: base_config_1.TYPE_VALUE,
    Animatable: base_config_1.TYPE,
    AnimationEventMap: base_config_1.TYPE,
    Animation: base_config_1.TYPE_VALUE,
    AnimationEffect: base_config_1.TYPE_VALUE,
    AnimationEvent: base_config_1.TYPE_VALUE,
    AnimationFrameProvider: base_config_1.TYPE,
    AnimationPlaybackEvent: base_config_1.TYPE_VALUE,
    AnimationTimeline: base_config_1.TYPE_VALUE,
    ApplicationCacheEventMap: base_config_1.TYPE,
    ApplicationCache: base_config_1.TYPE_VALUE,
    Attr: base_config_1.TYPE_VALUE,
    AudioBuffer: base_config_1.TYPE_VALUE,
    AudioBufferSourceNode: base_config_1.TYPE_VALUE,
    AudioContext: base_config_1.TYPE_VALUE,
    AudioDestinationNode: base_config_1.TYPE_VALUE,
    AudioListener: base_config_1.TYPE_VALUE,
    AudioNode: base_config_1.TYPE_VALUE,
    AudioParam: base_config_1.TYPE_VALUE,
    AudioParamMap: base_config_1.TYPE_VALUE,
    AudioProcessingEvent: base_config_1.TYPE_VALUE,
    AudioScheduledSourceNodeEventMap: base_config_1.TYPE,
    AudioScheduledSourceNode: base_config_1.TYPE_VALUE,
    AudioWorklet: base_config_1.TYPE_VALUE,
    AudioWorkletNodeEventMap: base_config_1.TYPE,
    AudioWorkletNode: base_config_1.TYPE_VALUE,
    AuthenticatorAssertionResponse: base_config_1.TYPE_VALUE,
    AuthenticatorAttestationResponse: base_config_1.TYPE_VALUE,
    AuthenticatorResponse: base_config_1.TYPE_VALUE,
    BarProp: base_config_1.TYPE_VALUE,
    BaseAudioContextEventMap: base_config_1.TYPE,
    BaseAudioContext: base_config_1.TYPE_VALUE,
    BeforeUnloadEvent: base_config_1.TYPE_VALUE,
    BhxBrowser: base_config_1.TYPE_VALUE,
    BiquadFilterNode: base_config_1.TYPE_VALUE,
    Blob: base_config_1.TYPE_VALUE,
    Body: base_config_1.TYPE,
    BroadcastChannelEventMap: base_config_1.TYPE,
    BroadcastChannel: base_config_1.TYPE_VALUE,
    ByteLengthQueuingStrategy: base_config_1.TYPE_VALUE,
    CDATASection: base_config_1.TYPE_VALUE,
    CSSConditionRule: base_config_1.TYPE_VALUE,
    CSSFontFaceRule: base_config_1.TYPE_VALUE,
    CSSGroupingRule: base_config_1.TYPE_VALUE,
    CSSImportRule: base_config_1.TYPE_VALUE,
    CSSKeyframeRule: base_config_1.TYPE_VALUE,
    CSSKeyframesRule: base_config_1.TYPE_VALUE,
    CSSMediaRule: base_config_1.TYPE_VALUE,
    CSSNamespaceRule: base_config_1.TYPE_VALUE,
    CSSPageRule: base_config_1.TYPE_VALUE,
    CSSRule: base_config_1.TYPE_VALUE,
    CSSRuleList: base_config_1.TYPE_VALUE,
    CSSStyleDeclaration: base_config_1.TYPE_VALUE,
    CSSStyleRule: base_config_1.TYPE_VALUE,
    CSSStyleSheet: base_config_1.TYPE_VALUE,
    CSSSupportsRule: base_config_1.TYPE_VALUE,
    Cache: base_config_1.TYPE_VALUE,
    CacheStorage: base_config_1.TYPE_VALUE,
    CanvasCompositing: base_config_1.TYPE,
    CanvasDrawImage: base_config_1.TYPE,
    CanvasDrawPath: base_config_1.TYPE,
    CanvasFillStrokeStyles: base_config_1.TYPE,
    CanvasFilters: base_config_1.TYPE,
    CanvasGradient: base_config_1.TYPE_VALUE,
    CanvasImageData: base_config_1.TYPE,
    CanvasImageSmoothing: base_config_1.TYPE,
    CanvasPath: base_config_1.TYPE,
    CanvasPathDrawingStyles: base_config_1.TYPE,
    CanvasPattern: base_config_1.TYPE_VALUE,
    CanvasRect: base_config_1.TYPE,
    CanvasRenderingContext2D: base_config_1.TYPE_VALUE,
    CanvasShadowStyles: base_config_1.TYPE,
    CanvasState: base_config_1.TYPE,
    CanvasText: base_config_1.TYPE,
    CanvasTextDrawingStyles: base_config_1.TYPE,
    CanvasTransform: base_config_1.TYPE,
    CanvasUserInterface: base_config_1.TYPE,
    CaretPosition: base_config_1.TYPE_VALUE,
    ChannelMergerNode: base_config_1.TYPE_VALUE,
    ChannelSplitterNode: base_config_1.TYPE_VALUE,
    CharacterData: base_config_1.TYPE_VALUE,
    ChildNode: base_config_1.TYPE,
    ClientRect: base_config_1.TYPE_VALUE,
    ClientRectList: base_config_1.TYPE_VALUE,
    Clipboard: base_config_1.TYPE_VALUE,
    ClipboardEvent: base_config_1.TYPE_VALUE,
    CloseEvent: base_config_1.TYPE_VALUE,
    Comment: base_config_1.TYPE_VALUE,
    CompositionEvent: base_config_1.TYPE_VALUE,
    ConcatParams: base_config_1.TYPE,
    ConstantSourceNode: base_config_1.TYPE_VALUE,
    ConvolverNode: base_config_1.TYPE_VALUE,
    CountQueuingStrategy: base_config_1.TYPE_VALUE,
    Credential: base_config_1.TYPE_VALUE,
    CredentialsContainer: base_config_1.TYPE_VALUE,
    Crypto: base_config_1.TYPE_VALUE,
    CryptoKey: base_config_1.TYPE_VALUE,
    CryptoKeyPair: base_config_1.TYPE_VALUE,
    CustomElementRegistry: base_config_1.TYPE_VALUE,
    CustomEvent: base_config_1.TYPE_VALUE,
    DOMError: base_config_1.TYPE_VALUE,
    DOMException: base_config_1.TYPE_VALUE,
    DOMImplementation: base_config_1.TYPE_VALUE,
    DOMMatrix: base_config_1.TYPE_VALUE,
    SVGMatrix: base_config_1.TYPE_VALUE,
    WebKitCSSMatrix: base_config_1.TYPE_VALUE,
    DOMMatrixReadOnly: base_config_1.TYPE_VALUE,
    DOMParser: base_config_1.TYPE_VALUE,
    DOMPoint: base_config_1.TYPE_VALUE,
    SVGPoint: base_config_1.TYPE_VALUE,
    DOMPointReadOnly: base_config_1.TYPE_VALUE,
    DOMQuad: base_config_1.TYPE_VALUE,
    DOMRect: base_config_1.TYPE_VALUE,
    SVGRect: base_config_1.TYPE_VALUE,
    DOMRectList: base_config_1.TYPE_VALUE,
    DOMRectReadOnly: base_config_1.TYPE_VALUE,
    DOMSettableTokenList: base_config_1.TYPE_VALUE,
    DOMStringList: base_config_1.TYPE_VALUE,
    DOMStringMap: base_config_1.TYPE_VALUE,
    DOMTokenList: base_config_1.TYPE_VALUE,
    DataCue: base_config_1.TYPE_VALUE,
    DataTransfer: base_config_1.TYPE_VALUE,
    DataTransferItem: base_config_1.TYPE_VALUE,
    DataTransferItemList: base_config_1.TYPE_VALUE,
    DeferredPermissionRequest: base_config_1.TYPE_VALUE,
    DelayNode: base_config_1.TYPE_VALUE,
    DeviceAcceleration: base_config_1.TYPE_VALUE,
    DeviceMotionEvent: base_config_1.TYPE_VALUE,
    DeviceMotionEventAcceleration: base_config_1.TYPE,
    DeviceMotionEventRotationRate: base_config_1.TYPE,
    DeviceOrientationEvent: base_config_1.TYPE_VALUE,
    DeviceRotationRate: base_config_1.TYPE_VALUE,
    DhImportKeyParams: base_config_1.TYPE,
    DhKeyAlgorithm: base_config_1.TYPE,
    DhKeyDeriveParams: base_config_1.TYPE,
    DhKeyGenParams: base_config_1.TYPE,
    DocumentEventMap: base_config_1.TYPE,
    Document: base_config_1.TYPE_VALUE,
    DocumentAndElementEventHandlersEventMap: base_config_1.TYPE,
    DocumentAndElementEventHandlers: base_config_1.TYPE,
    DocumentEvent: base_config_1.TYPE,
    DocumentFragment: base_config_1.TYPE_VALUE,
    DocumentOrShadowRoot: base_config_1.TYPE,
    DocumentTimeline: base_config_1.TYPE_VALUE,
    DocumentType: base_config_1.TYPE_VALUE,
    DragEvent: base_config_1.TYPE_VALUE,
    DynamicsCompressorNode: base_config_1.TYPE_VALUE,
    EXT_blend_minmax: base_config_1.TYPE,
    EXT_frag_depth: base_config_1.TYPE,
    EXT_sRGB: base_config_1.TYPE,
    EXT_shader_texture_lod: base_config_1.TYPE,
    EXT_texture_filter_anisotropic: base_config_1.TYPE,
    ElementEventMap: base_config_1.TYPE,
    Element: base_config_1.TYPE_VALUE,
    ElementCSSInlineStyle: base_config_1.TYPE,
    ElementContentEditable: base_config_1.TYPE,
    ErrorEvent: base_config_1.TYPE_VALUE,
    Event: base_config_1.TYPE_VALUE,
    EventListenerObject: base_config_1.TYPE,
    EventSourceEventMap: base_config_1.TYPE,
    EventSource: base_config_1.TYPE_VALUE,
    EventTarget: base_config_1.TYPE_VALUE,
    ExtensionScriptApis: base_config_1.TYPE_VALUE,
    External: base_config_1.TYPE_VALUE,
    File: base_config_1.TYPE_VALUE,
    FileList: base_config_1.TYPE_VALUE,
    FileReaderEventMap: base_config_1.TYPE,
    FileReader: base_config_1.TYPE_VALUE,
    FocusEvent: base_config_1.TYPE_VALUE,
    FocusNavigationEvent: base_config_1.TYPE_VALUE,
    FormData: base_config_1.TYPE_VALUE,
    GainNode: base_config_1.TYPE_VALUE,
    Gamepad: base_config_1.TYPE_VALUE,
    GamepadButton: base_config_1.TYPE_VALUE,
    GamepadEvent: base_config_1.TYPE_VALUE,
    GamepadHapticActuator: base_config_1.TYPE_VALUE,
    GamepadPose: base_config_1.TYPE_VALUE,
    GenericTransformStream: base_config_1.TYPE,
    Geolocation: base_config_1.TYPE_VALUE,
    GeolocationCoordinates: base_config_1.TYPE_VALUE,
    GeolocationPosition: base_config_1.TYPE_VALUE,
    GeolocationPositionError: base_config_1.TYPE_VALUE,
    GlobalEventHandlersEventMap: base_config_1.TYPE,
    GlobalEventHandlers: base_config_1.TYPE,
    HTMLAllCollection: base_config_1.TYPE_VALUE,
    HTMLAnchorElement: base_config_1.TYPE_VALUE,
    HTMLAppletElement: base_config_1.TYPE_VALUE,
    HTMLAreaElement: base_config_1.TYPE_VALUE,
    HTMLAudioElement: base_config_1.TYPE_VALUE,
    HTMLBRElement: base_config_1.TYPE_VALUE,
    HTMLBaseElement: base_config_1.TYPE_VALUE,
    HTMLBodyElementEventMap: base_config_1.TYPE,
    HTMLBodyElement: base_config_1.TYPE_VALUE,
    HTMLButtonElement: base_config_1.TYPE_VALUE,
    HTMLCanvasElement: base_config_1.TYPE_VALUE,
    HTMLCollectionBase: base_config_1.TYPE,
    HTMLCollection: base_config_1.TYPE_VALUE,
    HTMLCollectionOf: base_config_1.TYPE,
    HTMLDListElement: base_config_1.TYPE_VALUE,
    HTMLDataElement: base_config_1.TYPE_VALUE,
    HTMLDataListElement: base_config_1.TYPE_VALUE,
    HTMLDetailsElement: base_config_1.TYPE_VALUE,
    HTMLDialogElement: base_config_1.TYPE_VALUE,
    HTMLDirectoryElement: base_config_1.TYPE_VALUE,
    HTMLDivElement: base_config_1.TYPE_VALUE,
    HTMLDocument: base_config_1.TYPE_VALUE,
    HTMLElementEventMap: base_config_1.TYPE,
    HTMLElement: base_config_1.TYPE_VALUE,
    HTMLEmbedElement: base_config_1.TYPE_VALUE,
    HTMLFieldSetElement: base_config_1.TYPE_VALUE,
    HTMLFontElement: base_config_1.TYPE_VALUE,
    HTMLFormControlsCollection: base_config_1.TYPE_VALUE,
    HTMLFormElement: base_config_1.TYPE_VALUE,
    HTMLFrameElement: base_config_1.TYPE_VALUE,
    HTMLFrameSetElementEventMap: base_config_1.TYPE,
    HTMLFrameSetElement: base_config_1.TYPE_VALUE,
    HTMLHRElement: base_config_1.TYPE_VALUE,
    HTMLHeadElement: base_config_1.TYPE_VALUE,
    HTMLHeadingElement: base_config_1.TYPE_VALUE,
    HTMLHtmlElement: base_config_1.TYPE_VALUE,
    HTMLHyperlinkElementUtils: base_config_1.TYPE,
    HTMLIFrameElement: base_config_1.TYPE_VALUE,
    HTMLImageElement: base_config_1.TYPE_VALUE,
    HTMLInputElement: base_config_1.TYPE_VALUE,
    HTMLLIElement: base_config_1.TYPE_VALUE,
    HTMLLabelElement: base_config_1.TYPE_VALUE,
    HTMLLegendElement: base_config_1.TYPE_VALUE,
    HTMLLinkElement: base_config_1.TYPE_VALUE,
    HTMLMapElement: base_config_1.TYPE_VALUE,
    HTMLMarqueeElementEventMap: base_config_1.TYPE,
    HTMLMarqueeElement: base_config_1.TYPE_VALUE,
    HTMLMediaElementEventMap: base_config_1.TYPE,
    HTMLMediaElement: base_config_1.TYPE_VALUE,
    HTMLMenuElement: base_config_1.TYPE_VALUE,
    HTMLMetaElement: base_config_1.TYPE_VALUE,
    HTMLMeterElement: base_config_1.TYPE_VALUE,
    HTMLModElement: base_config_1.TYPE_VALUE,
    HTMLOListElement: base_config_1.TYPE_VALUE,
    HTMLObjectElement: base_config_1.TYPE_VALUE,
    HTMLOptGroupElement: base_config_1.TYPE_VALUE,
    HTMLOptionElement: base_config_1.TYPE_VALUE,
    HTMLOptionsCollection: base_config_1.TYPE_VALUE,
    HTMLOrSVGElement: base_config_1.TYPE,
    HTMLOutputElement: base_config_1.TYPE_VALUE,
    HTMLParagraphElement: base_config_1.TYPE_VALUE,
    HTMLParamElement: base_config_1.TYPE_VALUE,
    HTMLPictureElement: base_config_1.TYPE_VALUE,
    HTMLPreElement: base_config_1.TYPE_VALUE,
    HTMLProgressElement: base_config_1.TYPE_VALUE,
    HTMLQuoteElement: base_config_1.TYPE_VALUE,
    HTMLScriptElement: base_config_1.TYPE_VALUE,
    HTMLSelectElement: base_config_1.TYPE_VALUE,
    HTMLSlotElement: base_config_1.TYPE_VALUE,
    HTMLSourceElement: base_config_1.TYPE_VALUE,
    HTMLSpanElement: base_config_1.TYPE_VALUE,
    HTMLStyleElement: base_config_1.TYPE_VALUE,
    HTMLTableCaptionElement: base_config_1.TYPE_VALUE,
    HTMLTableCellElement: base_config_1.TYPE_VALUE,
    HTMLTableColElement: base_config_1.TYPE_VALUE,
    HTMLTableDataCellElement: base_config_1.TYPE_VALUE,
    HTMLTableElement: base_config_1.TYPE_VALUE,
    HTMLTableHeaderCellElement: base_config_1.TYPE_VALUE,
    HTMLTableRowElement: base_config_1.TYPE_VALUE,
    HTMLTableSectionElement: base_config_1.TYPE_VALUE,
    HTMLTemplateElement: base_config_1.TYPE_VALUE,
    HTMLTextAreaElement: base_config_1.TYPE_VALUE,
    HTMLTimeElement: base_config_1.TYPE_VALUE,
    HTMLTitleElement: base_config_1.TYPE_VALUE,
    HTMLTrackElement: base_config_1.TYPE_VALUE,
    HTMLUListElement: base_config_1.TYPE_VALUE,
    HTMLUnknownElement: base_config_1.TYPE_VALUE,
    HTMLVideoElement: base_config_1.TYPE_VALUE,
    HashChangeEvent: base_config_1.TYPE_VALUE,
    Headers: base_config_1.TYPE_VALUE,
    History: base_config_1.TYPE_VALUE,
    IDBArrayKey: base_config_1.TYPE,
    IDBCursor: base_config_1.TYPE_VALUE,
    IDBCursorWithValue: base_config_1.TYPE_VALUE,
    IDBDatabaseEventMap: base_config_1.TYPE,
    IDBDatabase: base_config_1.TYPE_VALUE,
    IDBFactory: base_config_1.TYPE_VALUE,
    IDBIndex: base_config_1.TYPE_VALUE,
    IDBKeyRange: base_config_1.TYPE_VALUE,
    IDBObjectStore: base_config_1.TYPE_VALUE,
    IDBOpenDBRequestEventMap: base_config_1.TYPE,
    IDBOpenDBRequest: base_config_1.TYPE_VALUE,
    IDBRequestEventMap: base_config_1.TYPE,
    IDBRequest: base_config_1.TYPE_VALUE,
    IDBTransactionEventMap: base_config_1.TYPE,
    IDBTransaction: base_config_1.TYPE_VALUE,
    IDBVersionChangeEvent: base_config_1.TYPE_VALUE,
    IIRFilterNode: base_config_1.TYPE_VALUE,
    ImageBitmap: base_config_1.TYPE_VALUE,
    ImageBitmapRenderingContext: base_config_1.TYPE_VALUE,
    ImageData: base_config_1.TYPE_VALUE,
    InnerHTML: base_config_1.TYPE,
    InputDeviceInfo: base_config_1.TYPE_VALUE,
    InputEvent: base_config_1.TYPE_VALUE,
    IntersectionObserver: base_config_1.TYPE_VALUE,
    IntersectionObserverEntry: base_config_1.TYPE_VALUE,
    KeyboardEvent: base_config_1.TYPE_VALUE,
    KeyframeEffect: base_config_1.TYPE_VALUE,
    LinkStyle: base_config_1.TYPE,
    ListeningStateChangedEvent: base_config_1.TYPE_VALUE,
    Location: base_config_1.TYPE_VALUE,
    MSAssertion: base_config_1.TYPE_VALUE,
    MSBlobBuilder: base_config_1.TYPE_VALUE,
    MSFIDOCredentialAssertion: base_config_1.TYPE_VALUE,
    MSFIDOSignature: base_config_1.TYPE_VALUE,
    MSFIDOSignatureAssertion: base_config_1.TYPE_VALUE,
    MSFileSaver: base_config_1.TYPE,
    MSGesture: base_config_1.TYPE_VALUE,
    MSGraphicsTrust: base_config_1.TYPE_VALUE,
    MSInputMethodContextEventMap: base_config_1.TYPE,
    MSInputMethodContext: base_config_1.TYPE_VALUE,
    MSMediaKeyError: base_config_1.TYPE_VALUE,
    MSMediaKeySession: base_config_1.TYPE_VALUE,
    MSMediaKeys: base_config_1.TYPE_VALUE,
    MSNavigatorDoNotTrack: base_config_1.TYPE,
    MSStream: base_config_1.TYPE_VALUE,
    MediaDeviceInfo: base_config_1.TYPE_VALUE,
    MediaDevicesEventMap: base_config_1.TYPE,
    MediaDevices: base_config_1.TYPE_VALUE,
    MediaElementAudioSourceNode: base_config_1.TYPE_VALUE,
    MediaEncryptedEvent: base_config_1.TYPE_VALUE,
    MediaError: base_config_1.TYPE_VALUE,
    MediaKeyMessageEvent: base_config_1.TYPE_VALUE,
    MediaKeySessionEventMap: base_config_1.TYPE,
    MediaKeySession: base_config_1.TYPE_VALUE,
    MediaKeyStatusMap: base_config_1.TYPE_VALUE,
    MediaKeySystemAccess: base_config_1.TYPE_VALUE,
    MediaKeys: base_config_1.TYPE_VALUE,
    MediaList: base_config_1.TYPE_VALUE,
    MediaQueryListEventMap: base_config_1.TYPE,
    MediaQueryList: base_config_1.TYPE_VALUE,
    MediaQueryListEvent: base_config_1.TYPE_VALUE,
    MediaSourceEventMap: base_config_1.TYPE,
    MediaSource: base_config_1.TYPE_VALUE,
    MediaStreamEventMap: base_config_1.TYPE,
    MediaStream: base_config_1.TYPE_VALUE,
    MediaStreamAudioDestinationNode: base_config_1.TYPE_VALUE,
    MediaStreamAudioSourceNode: base_config_1.TYPE_VALUE,
    MediaStreamError: base_config_1.TYPE_VALUE,
    MediaStreamErrorEvent: base_config_1.TYPE_VALUE,
    MediaStreamEvent: base_config_1.TYPE_VALUE,
    MediaStreamTrackEventMap: base_config_1.TYPE,
    MediaStreamTrack: base_config_1.TYPE_VALUE,
    MediaStreamTrackAudioSourceNode: base_config_1.TYPE_VALUE,
    MediaStreamTrackEvent: base_config_1.TYPE_VALUE,
    MessageChannel: base_config_1.TYPE_VALUE,
    MessageEvent: base_config_1.TYPE_VALUE,
    MessagePortEventMap: base_config_1.TYPE,
    MessagePort: base_config_1.TYPE_VALUE,
    MimeType: base_config_1.TYPE_VALUE,
    MimeTypeArray: base_config_1.TYPE_VALUE,
    MouseEvent: base_config_1.TYPE_VALUE,
    MutationEvent: base_config_1.TYPE_VALUE,
    MutationObserver: base_config_1.TYPE_VALUE,
    MutationRecord: base_config_1.TYPE_VALUE,
    NamedNodeMap: base_config_1.TYPE_VALUE,
    NavigationPreloadManager: base_config_1.TYPE_VALUE,
    Navigator: base_config_1.TYPE_VALUE,
    NavigatorAutomationInformation: base_config_1.TYPE,
    NavigatorBeacon: base_config_1.TYPE,
    NavigatorConcurrentHardware: base_config_1.TYPE,
    NavigatorContentUtils: base_config_1.TYPE,
    NavigatorCookies: base_config_1.TYPE,
    NavigatorID: base_config_1.TYPE,
    NavigatorLanguage: base_config_1.TYPE,
    NavigatorOnLine: base_config_1.TYPE,
    NavigatorPlugins: base_config_1.TYPE,
    NavigatorStorage: base_config_1.TYPE,
    Node: base_config_1.TYPE_VALUE,
    NodeFilter: base_config_1.TYPE_VALUE,
    NodeIterator: base_config_1.TYPE_VALUE,
    NodeList: base_config_1.TYPE_VALUE,
    NodeListOf: base_config_1.TYPE,
    NonDocumentTypeChildNode: base_config_1.TYPE,
    NonElementParentNode: base_config_1.TYPE,
    NotificationEventMap: base_config_1.TYPE,
    Notification: base_config_1.TYPE_VALUE,
    OES_element_index_uint: base_config_1.TYPE,
    OES_standard_derivatives: base_config_1.TYPE,
    OES_texture_float: base_config_1.TYPE,
    OES_texture_float_linear: base_config_1.TYPE,
    OES_texture_half_float: base_config_1.TYPE,
    OES_texture_half_float_linear: base_config_1.TYPE,
    OES_vertex_array_object: base_config_1.TYPE,
    OfflineAudioCompletionEvent: base_config_1.TYPE_VALUE,
    OfflineAudioContextEventMap: base_config_1.TYPE,
    OfflineAudioContext: base_config_1.TYPE_VALUE,
    OffscreenCanvas: base_config_1.TYPE_VALUE,
    OffscreenCanvasRenderingContext2D: base_config_1.TYPE_VALUE,
    OscillatorNode: base_config_1.TYPE_VALUE,
    OverconstrainedError: base_config_1.TYPE_VALUE,
    OverflowEvent: base_config_1.TYPE_VALUE,
    PageTransitionEvent: base_config_1.TYPE_VALUE,
    PannerNode: base_config_1.TYPE_VALUE,
    ParentNode: base_config_1.TYPE,
    Path2D: base_config_1.TYPE_VALUE,
    PaymentAddress: base_config_1.TYPE_VALUE,
    PaymentMethodChangeEvent: base_config_1.TYPE_VALUE,
    PaymentRequestEventMap: base_config_1.TYPE,
    PaymentRequest: base_config_1.TYPE_VALUE,
    PaymentRequestUpdateEvent: base_config_1.TYPE_VALUE,
    PaymentResponseEventMap: base_config_1.TYPE,
    PaymentResponse: base_config_1.TYPE_VALUE,
    PerfWidgetExternal: base_config_1.TYPE_VALUE,
    PerformanceEventMap: base_config_1.TYPE,
    Performance: base_config_1.TYPE_VALUE,
    PerformanceEntry: base_config_1.TYPE_VALUE,
    PerformanceMark: base_config_1.TYPE_VALUE,
    PerformanceMeasure: base_config_1.TYPE_VALUE,
    PerformanceNavigation: base_config_1.TYPE_VALUE,
    PerformanceNavigationTiming: base_config_1.TYPE_VALUE,
    PerformanceObserver: base_config_1.TYPE_VALUE,
    PerformanceObserverEntryList: base_config_1.TYPE_VALUE,
    PerformanceResourceTiming: base_config_1.TYPE_VALUE,
    PerformanceTiming: base_config_1.TYPE_VALUE,
    PeriodicWave: base_config_1.TYPE_VALUE,
    PermissionRequest: base_config_1.TYPE_VALUE,
    PermissionRequestedEvent: base_config_1.TYPE_VALUE,
    PermissionStatusEventMap: base_config_1.TYPE,
    PermissionStatus: base_config_1.TYPE_VALUE,
    Permissions: base_config_1.TYPE_VALUE,
    Plugin: base_config_1.TYPE_VALUE,
    PluginArray: base_config_1.TYPE_VALUE,
    PointerEvent: base_config_1.TYPE_VALUE,
    PopStateEvent: base_config_1.TYPE_VALUE,
    ProcessingInstruction: base_config_1.TYPE_VALUE,
    ProgressEvent: base_config_1.TYPE_VALUE,
    PromiseRejectionEvent: base_config_1.TYPE_VALUE,
    PublicKeyCredential: base_config_1.TYPE_VALUE,
    PushManager: base_config_1.TYPE_VALUE,
    PushSubscription: base_config_1.TYPE_VALUE,
    PushSubscriptionOptions: base_config_1.TYPE_VALUE,
    RTCCertificate: base_config_1.TYPE_VALUE,
    RTCDTMFSenderEventMap: base_config_1.TYPE,
    RTCDTMFSender: base_config_1.TYPE_VALUE,
    RTCDTMFToneChangeEvent: base_config_1.TYPE_VALUE,
    RTCDataChannelEventMap: base_config_1.TYPE,
    RTCDataChannel: base_config_1.TYPE_VALUE,
    RTCDataChannelEvent: base_config_1.TYPE_VALUE,
    RTCDtlsTransportEventMap: base_config_1.TYPE,
    RTCDtlsTransport: base_config_1.TYPE_VALUE,
    RTCDtlsTransportStateChangedEvent: base_config_1.TYPE_VALUE,
    RTCDtmfSenderEventMap: base_config_1.TYPE,
    RTCDtmfSender: base_config_1.TYPE_VALUE,
    RTCError: base_config_1.TYPE_VALUE,
    RTCErrorEvent: base_config_1.TYPE_VALUE,
    RTCIceCandidate: base_config_1.TYPE_VALUE,
    RTCIceCandidatePairChangedEvent: base_config_1.TYPE_VALUE,
    RTCIceGathererEventMap: base_config_1.TYPE,
    RTCIceGatherer: base_config_1.TYPE_VALUE,
    RTCIceGathererEvent: base_config_1.TYPE_VALUE,
    RTCIceTransportEventMap: base_config_1.TYPE,
    RTCIceTransport: base_config_1.TYPE_VALUE,
    RTCIceTransportStateChangedEvent: base_config_1.TYPE_VALUE,
    RTCIdentityAssertion: base_config_1.TYPE_VALUE,
    RTCPeerConnectionEventMap: base_config_1.TYPE,
    RTCPeerConnection: base_config_1.TYPE_VALUE,
    RTCPeerConnectionIceErrorEvent: base_config_1.TYPE_VALUE,
    RTCPeerConnectionIceEvent: base_config_1.TYPE_VALUE,
    RTCRtpReceiver: base_config_1.TYPE_VALUE,
    RTCRtpSender: base_config_1.TYPE_VALUE,
    RTCRtpTransceiver: base_config_1.TYPE_VALUE,
    RTCSctpTransportEventMap: base_config_1.TYPE,
    RTCSctpTransport: base_config_1.TYPE_VALUE,
    RTCSessionDescription: base_config_1.TYPE_VALUE,
    RTCSrtpSdesTransportEventMap: base_config_1.TYPE,
    RTCSrtpSdesTransport: base_config_1.TYPE_VALUE,
    RTCSsrcConflictEvent: base_config_1.TYPE_VALUE,
    RTCStatsProvider: base_config_1.TYPE_VALUE,
    RTCTrackEvent: base_config_1.TYPE_VALUE,
    RadioNodeList: base_config_1.TYPE_VALUE,
    RandomSource: base_config_1.TYPE_VALUE,
    Range: base_config_1.TYPE_VALUE,
    ReadableStream: base_config_1.TYPE_VALUE,
    ReadableStreamDefaultController: base_config_1.TYPE_VALUE,
    ReadableStreamDefaultReader: base_config_1.TYPE_VALUE,
    ReadableStreamGenericReader: base_config_1.TYPE,
    Request: base_config_1.TYPE_VALUE,
    ResizeObserver: base_config_1.TYPE_VALUE,
    ResizeObserverEntry: base_config_1.TYPE_VALUE,
    ResizeObserverSize: base_config_1.TYPE_VALUE,
    Response: base_config_1.TYPE_VALUE,
    SVGAElement: base_config_1.TYPE_VALUE,
    SVGAngle: base_config_1.TYPE_VALUE,
    SVGAnimateElement: base_config_1.TYPE_VALUE,
    SVGAnimateMotionElement: base_config_1.TYPE_VALUE,
    SVGAnimateTransformElement: base_config_1.TYPE_VALUE,
    SVGAnimatedAngle: base_config_1.TYPE_VALUE,
    SVGAnimatedBoolean: base_config_1.TYPE_VALUE,
    SVGAnimatedEnumeration: base_config_1.TYPE_VALUE,
    SVGAnimatedInteger: base_config_1.TYPE_VALUE,
    SVGAnimatedLength: base_config_1.TYPE_VALUE,
    SVGAnimatedLengthList: base_config_1.TYPE_VALUE,
    SVGAnimatedNumber: base_config_1.TYPE_VALUE,
    SVGAnimatedNumberList: base_config_1.TYPE_VALUE,
    SVGAnimatedPoints: base_config_1.TYPE,
    SVGAnimatedPreserveAspectRatio: base_config_1.TYPE_VALUE,
    SVGAnimatedRect: base_config_1.TYPE_VALUE,
    SVGAnimatedString: base_config_1.TYPE_VALUE,
    SVGAnimatedTransformList: base_config_1.TYPE_VALUE,
    SVGAnimationElement: base_config_1.TYPE_VALUE,
    SVGCircleElement: base_config_1.TYPE_VALUE,
    SVGClipPathElement: base_config_1.TYPE_VALUE,
    SVGComponentTransferFunctionElement: base_config_1.TYPE_VALUE,
    SVGCursorElement: base_config_1.TYPE_VALUE,
    SVGDefsElement: base_config_1.TYPE_VALUE,
    SVGDescElement: base_config_1.TYPE_VALUE,
    SVGElementEventMap: base_config_1.TYPE,
    SVGElement: base_config_1.TYPE_VALUE,
    SVGElementInstance: base_config_1.TYPE_VALUE,
    SVGElementInstanceList: base_config_1.TYPE_VALUE,
    SVGEllipseElement: base_config_1.TYPE_VALUE,
    SVGFEBlendElement: base_config_1.TYPE_VALUE,
    SVGFEColorMatrixElement: base_config_1.TYPE_VALUE,
    SVGFEComponentTransferElement: base_config_1.TYPE_VALUE,
    SVGFECompositeElement: base_config_1.TYPE_VALUE,
    SVGFEConvolveMatrixElement: base_config_1.TYPE_VALUE,
    SVGFEDiffuseLightingElement: base_config_1.TYPE_VALUE,
    SVGFEDisplacementMapElement: base_config_1.TYPE_VALUE,
    SVGFEDistantLightElement: base_config_1.TYPE_VALUE,
    SVGFEDropShadowElement: base_config_1.TYPE_VALUE,
    SVGFEFloodElement: base_config_1.TYPE_VALUE,
    SVGFEFuncAElement: base_config_1.TYPE_VALUE,
    SVGFEFuncBElement: base_config_1.TYPE_VALUE,
    SVGFEFuncGElement: base_config_1.TYPE_VALUE,
    SVGFEFuncRElement: base_config_1.TYPE_VALUE,
    SVGFEGaussianBlurElement: base_config_1.TYPE_VALUE,
    SVGFEImageElement: base_config_1.TYPE_VALUE,
    SVGFEMergeElement: base_config_1.TYPE_VALUE,
    SVGFEMergeNodeElement: base_config_1.TYPE_VALUE,
    SVGFEMorphologyElement: base_config_1.TYPE_VALUE,
    SVGFEOffsetElement: base_config_1.TYPE_VALUE,
    SVGFEPointLightElement: base_config_1.TYPE_VALUE,
    SVGFESpecularLightingElement: base_config_1.TYPE_VALUE,
    SVGFESpotLightElement: base_config_1.TYPE_VALUE,
    SVGFETileElement: base_config_1.TYPE_VALUE,
    SVGFETurbulenceElement: base_config_1.TYPE_VALUE,
    SVGFilterElement: base_config_1.TYPE_VALUE,
    SVGFilterPrimitiveStandardAttributes: base_config_1.TYPE,
    SVGFitToViewBox: base_config_1.TYPE,
    SVGForeignObjectElement: base_config_1.TYPE_VALUE,
    SVGGElement: base_config_1.TYPE_VALUE,
    SVGGeometryElement: base_config_1.TYPE_VALUE,
    SVGGradientElement: base_config_1.TYPE_VALUE,
    SVGGraphicsElement: base_config_1.TYPE_VALUE,
    SVGImageElement: base_config_1.TYPE_VALUE,
    SVGLength: base_config_1.TYPE_VALUE,
    SVGLengthList: base_config_1.TYPE_VALUE,
    SVGLineElement: base_config_1.TYPE_VALUE,
    SVGLinearGradientElement: base_config_1.TYPE_VALUE,
    SVGMarkerElement: base_config_1.TYPE_VALUE,
    SVGMaskElement: base_config_1.TYPE_VALUE,
    SVGMetadataElement: base_config_1.TYPE_VALUE,
    SVGNumber: base_config_1.TYPE_VALUE,
    SVGNumberList: base_config_1.TYPE_VALUE,
    SVGPathElement: base_config_1.TYPE_VALUE,
    SVGPathSeg: base_config_1.TYPE_VALUE,
    SVGPathSegArcAbs: base_config_1.TYPE_VALUE,
    SVGPathSegArcRel: base_config_1.TYPE_VALUE,
    SVGPathSegClosePath: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoCubicAbs: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoCubicRel: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoCubicSmoothAbs: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoCubicSmoothRel: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoQuadraticAbs: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoQuadraticRel: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoQuadraticSmoothAbs: base_config_1.TYPE_VALUE,
    SVGPathSegCurvetoQuadraticSmoothRel: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoAbs: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoHorizontalAbs: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoHorizontalRel: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoRel: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoVerticalAbs: base_config_1.TYPE_VALUE,
    SVGPathSegLinetoVerticalRel: base_config_1.TYPE_VALUE,
    SVGPathSegList: base_config_1.TYPE_VALUE,
    SVGPathSegMovetoAbs: base_config_1.TYPE_VALUE,
    SVGPathSegMovetoRel: base_config_1.TYPE_VALUE,
    SVGPatternElement: base_config_1.TYPE_VALUE,
    SVGPointList: base_config_1.TYPE_VALUE,
    SVGPolygonElement: base_config_1.TYPE_VALUE,
    SVGPolylineElement: base_config_1.TYPE_VALUE,
    SVGPreserveAspectRatio: base_config_1.TYPE_VALUE,
    SVGRadialGradientElement: base_config_1.TYPE_VALUE,
    SVGRectElement: base_config_1.TYPE_VALUE,
    SVGSVGElementEventMap: base_config_1.TYPE,
    SVGSVGElement: base_config_1.TYPE_VALUE,
    SVGScriptElement: base_config_1.TYPE_VALUE,
    SVGStopElement: base_config_1.TYPE_VALUE,
    SVGStringList: base_config_1.TYPE_VALUE,
    SVGStyleElement: base_config_1.TYPE_VALUE,
    SVGSwitchElement: base_config_1.TYPE_VALUE,
    SVGSymbolElement: base_config_1.TYPE_VALUE,
    SVGTSpanElement: base_config_1.TYPE_VALUE,
    SVGTests: base_config_1.TYPE,
    SVGTextContentElement: base_config_1.TYPE_VALUE,
    SVGTextElement: base_config_1.TYPE_VALUE,
    SVGTextPathElement: base_config_1.TYPE_VALUE,
    SVGTextPositioningElement: base_config_1.TYPE_VALUE,
    SVGTitleElement: base_config_1.TYPE_VALUE,
    SVGTransform: base_config_1.TYPE_VALUE,
    SVGTransformList: base_config_1.TYPE_VALUE,
    SVGURIReference: base_config_1.TYPE,
    SVGUnitTypes: base_config_1.TYPE_VALUE,
    SVGUseElement: base_config_1.TYPE_VALUE,
    SVGViewElement: base_config_1.TYPE_VALUE,
    SVGZoomAndPan: base_config_1.TYPE,
    SVGZoomEvent: base_config_1.TYPE_VALUE,
    Screen: base_config_1.TYPE_VALUE,
    ScreenOrientationEventMap: base_config_1.TYPE,
    ScreenOrientation: base_config_1.TYPE_VALUE,
    ScriptProcessorNodeEventMap: base_config_1.TYPE,
    ScriptProcessorNode: base_config_1.TYPE_VALUE,
    SecurityPolicyViolationEvent: base_config_1.TYPE_VALUE,
    Selection: base_config_1.TYPE_VALUE,
    ServiceUIFrameContext: base_config_1.TYPE_VALUE,
    ServiceWorkerEventMap: base_config_1.TYPE,
    ServiceWorker: base_config_1.TYPE_VALUE,
    ServiceWorkerContainerEventMap: base_config_1.TYPE,
    ServiceWorkerContainer: base_config_1.TYPE_VALUE,
    ServiceWorkerRegistrationEventMap: base_config_1.TYPE,
    ServiceWorkerRegistration: base_config_1.TYPE_VALUE,
    ShadowRoot: base_config_1.TYPE_VALUE,
    SharedWorker: base_config_1.TYPE_VALUE,
    Slottable: base_config_1.TYPE,
    SourceBufferEventMap: base_config_1.TYPE,
    SourceBuffer: base_config_1.TYPE_VALUE,
    SourceBufferListEventMap: base_config_1.TYPE,
    SourceBufferList: base_config_1.TYPE_VALUE,
    SpeechGrammar: base_config_1.TYPE_VALUE,
    SpeechGrammarList: base_config_1.TYPE_VALUE,
    SpeechRecognitionEventMap: base_config_1.TYPE,
    SpeechRecognition: base_config_1.TYPE_VALUE,
    SpeechRecognitionAlternative: base_config_1.TYPE_VALUE,
    SpeechRecognitionErrorEvent: base_config_1.TYPE_VALUE,
    SpeechRecognitionEvent: base_config_1.TYPE_VALUE,
    SpeechRecognitionResult: base_config_1.TYPE_VALUE,
    SpeechRecognitionResultList: base_config_1.TYPE_VALUE,
    SpeechSynthesisEventMap: base_config_1.TYPE,
    SpeechSynthesis: base_config_1.TYPE_VALUE,
    SpeechSynthesisErrorEvent: base_config_1.TYPE_VALUE,
    SpeechSynthesisEvent: base_config_1.TYPE_VALUE,
    SpeechSynthesisUtteranceEventMap: base_config_1.TYPE,
    SpeechSynthesisUtterance: base_config_1.TYPE_VALUE,
    SpeechSynthesisVoice: base_config_1.TYPE_VALUE,
    StaticRange: base_config_1.TYPE_VALUE,
    StereoPannerNode: base_config_1.TYPE_VALUE,
    Storage: base_config_1.TYPE_VALUE,
    StorageEvent: base_config_1.TYPE_VALUE,
    StorageManager: base_config_1.TYPE_VALUE,
    StyleMedia: base_config_1.TYPE_VALUE,
    StyleSheet: base_config_1.TYPE_VALUE,
    StyleSheetList: base_config_1.TYPE_VALUE,
    SubtleCrypto: base_config_1.TYPE_VALUE,
    SyncManager: base_config_1.TYPE_VALUE,
    Text: base_config_1.TYPE_VALUE,
    TextDecoder: base_config_1.TYPE_VALUE,
    TextDecoderCommon: base_config_1.TYPE,
    TextDecoderStream: base_config_1.TYPE_VALUE,
    TextEncoder: base_config_1.TYPE_VALUE,
    TextEncoderCommon: base_config_1.TYPE,
    TextEncoderStream: base_config_1.TYPE_VALUE,
    TextEvent: base_config_1.TYPE_VALUE,
    TextMetrics: base_config_1.TYPE_VALUE,
    TextTrackEventMap: base_config_1.TYPE,
    TextTrack: base_config_1.TYPE_VALUE,
    TextTrackCueEventMap: base_config_1.TYPE,
    TextTrackCue: base_config_1.TYPE_VALUE,
    TextTrackCueList: base_config_1.TYPE_VALUE,
    TextTrackListEventMap: base_config_1.TYPE,
    TextTrackList: base_config_1.TYPE_VALUE,
    TimeRanges: base_config_1.TYPE_VALUE,
    Touch: base_config_1.TYPE_VALUE,
    TouchEvent: base_config_1.TYPE_VALUE,
    TouchList: base_config_1.TYPE_VALUE,
    TrackEvent: base_config_1.TYPE_VALUE,
    TransformStream: base_config_1.TYPE_VALUE,
    TransformStreamDefaultController: base_config_1.TYPE_VALUE,
    TransitionEvent: base_config_1.TYPE_VALUE,
    TreeWalker: base_config_1.TYPE_VALUE,
    UIEvent: base_config_1.TYPE_VALUE,
    URL: base_config_1.TYPE_VALUE,
    webkitURL: base_config_1.TYPE_VALUE,
    URLSearchParams: base_config_1.TYPE_VALUE,
    VRDisplay: base_config_1.TYPE_VALUE,
    VRDisplayCapabilities: base_config_1.TYPE_VALUE,
    VRDisplayEvent: base_config_1.TYPE_VALUE,
    VREyeParameters: base_config_1.TYPE_VALUE,
    VRFieldOfView: base_config_1.TYPE_VALUE,
    VRFrameData: base_config_1.TYPE_VALUE,
    VRPose: base_config_1.TYPE_VALUE,
    VTTCue: base_config_1.TYPE_VALUE,
    VTTRegion: base_config_1.TYPE_VALUE,
    ValidityState: base_config_1.TYPE_VALUE,
    VideoPlaybackQuality: base_config_1.TYPE_VALUE,
    VisualViewportEventMap: base_config_1.TYPE,
    VisualViewport: base_config_1.TYPE_VALUE,
    WEBGL_color_buffer_float: base_config_1.TYPE,
    WEBGL_compressed_texture_astc: base_config_1.TYPE,
    WEBGL_compressed_texture_s3tc: base_config_1.TYPE,
    WEBGL_compressed_texture_s3tc_srgb: base_config_1.TYPE,
    WEBGL_debug_renderer_info: base_config_1.TYPE,
    WEBGL_debug_shaders: base_config_1.TYPE,
    WEBGL_depth_texture: base_config_1.TYPE,
    WEBGL_draw_buffers: base_config_1.TYPE,
    WEBGL_lose_context: base_config_1.TYPE,
    WaveShaperNode: base_config_1.TYPE_VALUE,
    WebGL2RenderingContext: base_config_1.TYPE_VALUE,
    WebGL2RenderingContextBase: base_config_1.TYPE,
    WebGL2RenderingContextOverloads: base_config_1.TYPE,
    WebGLActiveInfo: base_config_1.TYPE_VALUE,
    WebGLBuffer: base_config_1.TYPE_VALUE,
    WebGLContextEvent: base_config_1.TYPE_VALUE,
    WebGLFramebuffer: base_config_1.TYPE_VALUE,
    WebGLProgram: base_config_1.TYPE_VALUE,
    WebGLQuery: base_config_1.TYPE_VALUE,
    WebGLRenderbuffer: base_config_1.TYPE_VALUE,
    WebGLRenderingContext: base_config_1.TYPE_VALUE,
    WebGLRenderingContextBase: base_config_1.TYPE,
    WebGLRenderingContextOverloads: base_config_1.TYPE,
    WebGLSampler: base_config_1.TYPE_VALUE,
    WebGLShader: base_config_1.TYPE_VALUE,
    WebGLShaderPrecisionFormat: base_config_1.TYPE_VALUE,
    WebGLSync: base_config_1.TYPE_VALUE,
    WebGLTexture: base_config_1.TYPE_VALUE,
    WebGLTransformFeedback: base_config_1.TYPE_VALUE,
    WebGLUniformLocation: base_config_1.TYPE_VALUE,
    WebGLVertexArrayObject: base_config_1.TYPE_VALUE,
    WebGLVertexArrayObjectOES: base_config_1.TYPE,
    WebKitPoint: base_config_1.TYPE_VALUE,
    WebSocketEventMap: base_config_1.TYPE,
    WebSocket: base_config_1.TYPE_VALUE,
    WheelEvent: base_config_1.TYPE_VALUE,
    WindowEventMap: base_config_1.TYPE,
    Window: base_config_1.TYPE_VALUE,
    WindowEventHandlersEventMap: base_config_1.TYPE,
    WindowEventHandlers: base_config_1.TYPE,
    WindowLocalStorage: base_config_1.TYPE,
    WindowOrWorkerGlobalScope: base_config_1.TYPE,
    WindowSessionStorage: base_config_1.TYPE,
    WorkerEventMap: base_config_1.TYPE,
    Worker: base_config_1.TYPE_VALUE,
    Worklet: base_config_1.TYPE_VALUE,
    WritableStream: base_config_1.TYPE_VALUE,
    WritableStreamDefaultController: base_config_1.TYPE_VALUE,
    WritableStreamDefaultWriter: base_config_1.TYPE_VALUE,
    XMLDocument: base_config_1.TYPE_VALUE,
    XMLHttpRequestEventMap: base_config_1.TYPE,
    XMLHttpRequest: base_config_1.TYPE_VALUE,
    XMLHttpRequestEventTargetEventMap: base_config_1.TYPE,
    XMLHttpRequestEventTarget: base_config_1.TYPE_VALUE,
    XMLHttpRequestUpload: base_config_1.TYPE_VALUE,
    XMLSerializer: base_config_1.TYPE_VALUE,
    XPathEvaluator: base_config_1.TYPE_VALUE,
    XPathEvaluatorBase: base_config_1.TYPE,
    XPathExpression: base_config_1.TYPE_VALUE,
    XPathResult: base_config_1.TYPE_VALUE,
    XSLTProcessor: base_config_1.TYPE_VALUE,
    webkitRTCPeerConnection: base_config_1.TYPE_VALUE,
    EventListenerOrEventListenerObject: base_config_1.TYPE,
    Console: base_config_1.TYPE,
    CSS: base_config_1.TYPE_VALUE,
    WebAssembly: base_config_1.TYPE_VALUE,
    BlobCallback: base_config_1.TYPE,
    CustomElementConstructor: base_config_1.TYPE,
    DecodeErrorCallback: base_config_1.TYPE,
    DecodeSuccessCallback: base_config_1.TYPE,
    EventHandlerNonNull: base_config_1.TYPE,
    ForEachCallback: base_config_1.TYPE,
    FrameRequestCallback: base_config_1.TYPE,
    FunctionStringCallback: base_config_1.TYPE,
    IntersectionObserverCallback: base_config_1.TYPE,
    MSLaunchUriCallback: base_config_1.TYPE,
    MutationCallback: base_config_1.TYPE,
    NavigatorUserMediaErrorCallback: base_config_1.TYPE,
    NavigatorUserMediaSuccessCallback: base_config_1.TYPE,
    NotificationPermissionCallback: base_config_1.TYPE,
    OnBeforeUnloadEventHandlerNonNull: base_config_1.TYPE,
    OnErrorEventHandlerNonNull: base_config_1.TYPE,
    PerformanceObserverCallback: base_config_1.TYPE,
    PositionCallback: base_config_1.TYPE,
    PositionErrorCallback: base_config_1.TYPE,
    QueuingStrategySize: base_config_1.TYPE,
    RTCPeerConnectionErrorCallback: base_config_1.TYPE,
    RTCSessionDescriptionCallback: base_config_1.TYPE,
    RTCStatsCallback: base_config_1.TYPE,
    ResizeObserverCallback: base_config_1.TYPE,
    TransformerFlushCallback: base_config_1.TYPE,
    TransformerStartCallback: base_config_1.TYPE,
    TransformerTransformCallback: base_config_1.TYPE,
    UnderlyingSinkAbortCallback: base_config_1.TYPE,
    UnderlyingSinkCloseCallback: base_config_1.TYPE,
    UnderlyingSinkStartCallback: base_config_1.TYPE,
    UnderlyingSinkWriteCallback: base_config_1.TYPE,
    UnderlyingSourceCancelCallback: base_config_1.TYPE,
    UnderlyingSourcePullCallback: base_config_1.TYPE,
    UnderlyingSourceStartCallback: base_config_1.TYPE,
    VoidFunction: base_config_1.TYPE,
    HTMLElementTagNameMap: base_config_1.TYPE,
    HTMLElementDeprecatedTagNameMap: base_config_1.TYPE,
    SVGElementTagNameMap: base_config_1.TYPE,
    ElementTagNameMap: base_config_1.TYPE,
    HeadersInit: base_config_1.TYPE,
    BodyInit: base_config_1.TYPE,
    RequestInfo: base_config_1.TYPE,
    BlobPart: base_config_1.TYPE,
    DOMHighResTimeStamp: base_config_1.TYPE,
    RenderingContext: base_config_1.TYPE,
    HTMLOrSVGImageElement: base_config_1.TYPE,
    CanvasImageSource: base_config_1.TYPE,
    OffscreenRenderingContext: base_config_1.TYPE,
    MessageEventSource: base_config_1.TYPE,
    HTMLOrSVGScriptElement: base_config_1.TYPE,
    ImageBitmapSource: base_config_1.TYPE,
    MediaProvider: base_config_1.TYPE,
    OnErrorEventHandler: base_config_1.TYPE,
    OnBeforeUnloadEventHandler: base_config_1.TYPE,
    TimerHandler: base_config_1.TYPE,
    ConstrainULong: base_config_1.TYPE,
    ConstrainDouble: base_config_1.TYPE,
    ConstrainBoolean: base_config_1.TYPE,
    ConstrainDOMString: base_config_1.TYPE,
    PerformanceEntryList: base_config_1.TYPE,
    ReadableStreamReader: base_config_1.TYPE,
    ReadableStreamController: base_config_1.TYPE,
    VibratePattern: base_config_1.TYPE,
    COSEAlgorithmIdentifier: base_config_1.TYPE,
    UvmEntry: base_config_1.TYPE,
    UvmEntries: base_config_1.TYPE,
    AlgorithmIdentifier: base_config_1.TYPE,
    HashAlgorithmIdentifier: base_config_1.TYPE,
    BigInteger: base_config_1.TYPE,
    NamedCurve: base_config_1.TYPE,
    GLenum: base_config_1.TYPE,
    GLboolean: base_config_1.TYPE,
    GLbitfield: base_config_1.TYPE,
    GLint: base_config_1.TYPE,
    GLsizei: base_config_1.TYPE,
    GLintptr: base_config_1.TYPE,
    GLsizeiptr: base_config_1.TYPE,
    GLuint: base_config_1.TYPE,
    GLfloat: base_config_1.TYPE,
    GLclampf: base_config_1.TYPE,
    TexImageSource: base_config_1.TYPE,
    Float32List: base_config_1.TYPE,
    Int32List: base_config_1.TYPE,
    GLint64: base_config_1.TYPE,
    GLuint64: base_config_1.TYPE,
    Uint32List: base_config_1.TYPE,
    BufferSource: base_config_1.TYPE,
    DOMTimeStamp: base_config_1.TYPE,
    LineAndPositionSetting: base_config_1.TYPE,
    FormDataEntryValue: base_config_1.TYPE,
    InsertPosition: base_config_1.TYPE,
    IDBValidKey: base_config_1.TYPE,
    MutationRecordType: base_config_1.TYPE,
    IDBKeyPath: base_config_1.TYPE,
    Transferable: base_config_1.TYPE,
    RTCIceGatherCandidate: base_config_1.TYPE,
    RTCTransport: base_config_1.TYPE,
    MouseWheelEvent: base_config_1.TYPE,
    WindowProxy: base_config_1.TYPE,
    ReadableStreamDefaultReadResult: base_config_1.TYPE,
    AlignSetting: base_config_1.TYPE,
    AnimationPlayState: base_config_1.TYPE,
    AppendMode: base_config_1.TYPE,
    AttestationConveyancePreference: base_config_1.TYPE,
    AudioContextLatencyCategory: base_config_1.TYPE,
    AudioContextState: base_config_1.TYPE,
    AuthenticatorAttachment: base_config_1.TYPE,
    AuthenticatorTransport: base_config_1.TYPE,
    AutoKeyword: base_config_1.TYPE,
    AutomationRate: base_config_1.TYPE,
    BinaryType: base_config_1.TYPE,
    BiquadFilterType: base_config_1.TYPE,
    CanPlayTypeResult: base_config_1.TYPE,
    CanvasDirection: base_config_1.TYPE,
    CanvasFillRule: base_config_1.TYPE,
    CanvasLineCap: base_config_1.TYPE,
    CanvasLineJoin: base_config_1.TYPE,
    CanvasTextAlign: base_config_1.TYPE,
    CanvasTextBaseline: base_config_1.TYPE,
    ChannelCountMode: base_config_1.TYPE,
    ChannelInterpretation: base_config_1.TYPE,
    ClientTypes: base_config_1.TYPE,
    ColorSpaceConversion: base_config_1.TYPE,
    CompositeOperation: base_config_1.TYPE,
    CompositeOperationOrAuto: base_config_1.TYPE,
    CredentialMediationRequirement: base_config_1.TYPE,
    DOMParserSupportedType: base_config_1.TYPE,
    DirectionSetting: base_config_1.TYPE,
    DisplayCaptureSurfaceType: base_config_1.TYPE,
    DistanceModelType: base_config_1.TYPE,
    DocumentReadyState: base_config_1.TYPE,
    EndOfStreamError: base_config_1.TYPE,
    EndingType: base_config_1.TYPE,
    FillMode: base_config_1.TYPE,
    FullscreenNavigationUI: base_config_1.TYPE,
    GamepadHand: base_config_1.TYPE,
    GamepadHapticActuatorType: base_config_1.TYPE,
    GamepadMappingType: base_config_1.TYPE,
    IDBCursorDirection: base_config_1.TYPE,
    IDBRequestReadyState: base_config_1.TYPE,
    IDBTransactionMode: base_config_1.TYPE,
    ImageOrientation: base_config_1.TYPE,
    ImageSmoothingQuality: base_config_1.TYPE,
    IterationCompositeOperation: base_config_1.TYPE,
    KeyFormat: base_config_1.TYPE,
    KeyType: base_config_1.TYPE,
    KeyUsage: base_config_1.TYPE,
    LineAlignSetting: base_config_1.TYPE,
    ListeningState: base_config_1.TYPE,
    MSCredentialType: base_config_1.TYPE,
    MSTransportType: base_config_1.TYPE,
    MSWebViewPermissionState: base_config_1.TYPE,
    MSWebViewPermissionType: base_config_1.TYPE,
    MediaDeviceKind: base_config_1.TYPE,
    MediaKeyMessageType: base_config_1.TYPE,
    MediaKeySessionType: base_config_1.TYPE,
    MediaKeyStatus: base_config_1.TYPE,
    MediaKeysRequirement: base_config_1.TYPE,
    MediaStreamTrackState: base_config_1.TYPE,
    NavigationReason: base_config_1.TYPE,
    NavigationType: base_config_1.TYPE,
    NotificationDirection: base_config_1.TYPE,
    NotificationPermission: base_config_1.TYPE,
    OffscreenRenderingContextId: base_config_1.TYPE,
    OrientationLockType: base_config_1.TYPE,
    OrientationType: base_config_1.TYPE,
    OscillatorType: base_config_1.TYPE,
    OverSampleType: base_config_1.TYPE,
    PanningModelType: base_config_1.TYPE,
    PaymentComplete: base_config_1.TYPE,
    PaymentShippingType: base_config_1.TYPE,
    PermissionName: base_config_1.TYPE,
    PermissionState: base_config_1.TYPE,
    PlaybackDirection: base_config_1.TYPE,
    PositionAlignSetting: base_config_1.TYPE,
    PremultiplyAlpha: base_config_1.TYPE,
    PublicKeyCredentialType: base_config_1.TYPE,
    PushEncryptionKeyName: base_config_1.TYPE,
    PushPermissionState: base_config_1.TYPE,
    RTCBundlePolicy: base_config_1.TYPE,
    RTCDataChannelState: base_config_1.TYPE,
    RTCDtlsRole: base_config_1.TYPE,
    RTCDtlsTransportState: base_config_1.TYPE,
    RTCErrorDetailType: base_config_1.TYPE,
    RTCIceCandidateType: base_config_1.TYPE,
    RTCIceComponent: base_config_1.TYPE,
    RTCIceConnectionState: base_config_1.TYPE,
    RTCIceCredentialType: base_config_1.TYPE,
    RTCIceGatherPolicy: base_config_1.TYPE,
    RTCIceGathererState: base_config_1.TYPE,
    RTCIceGatheringState: base_config_1.TYPE,
    RTCIceProtocol: base_config_1.TYPE,
    RTCIceRole: base_config_1.TYPE,
    RTCIceTcpCandidateType: base_config_1.TYPE,
    RTCIceTransportPolicy: base_config_1.TYPE,
    RTCIceTransportState: base_config_1.TYPE,
    RTCPeerConnectionState: base_config_1.TYPE,
    RTCRtcpMuxPolicy: base_config_1.TYPE,
    RTCRtpTransceiverDirection: base_config_1.TYPE,
    RTCSctpTransportState: base_config_1.TYPE,
    RTCSdpType: base_config_1.TYPE,
    RTCSignalingState: base_config_1.TYPE,
    RTCStatsIceCandidatePairState: base_config_1.TYPE,
    RTCStatsIceCandidateType: base_config_1.TYPE,
    RTCStatsType: base_config_1.TYPE,
    ReadyState: base_config_1.TYPE,
    ReferrerPolicy: base_config_1.TYPE,
    RequestCache: base_config_1.TYPE,
    RequestCredentials: base_config_1.TYPE,
    RequestDestination: base_config_1.TYPE,
    RequestMode: base_config_1.TYPE,
    RequestRedirect: base_config_1.TYPE,
    ResidentKeyRequirement: base_config_1.TYPE,
    ResizeObserverBoxOptions: base_config_1.TYPE,
    ResizeQuality: base_config_1.TYPE,
    ResponseType: base_config_1.TYPE,
    ScrollBehavior: base_config_1.TYPE,
    ScrollLogicalPosition: base_config_1.TYPE,
    ScrollRestoration: base_config_1.TYPE,
    ScrollSetting: base_config_1.TYPE,
    SelectionMode: base_config_1.TYPE,
    ServiceWorkerState: base_config_1.TYPE,
    ServiceWorkerUpdateViaCache: base_config_1.TYPE,
    ShadowRootMode: base_config_1.TYPE,
    SpeechRecognitionErrorCode: base_config_1.TYPE,
    SpeechSynthesisErrorCode: base_config_1.TYPE,
    TextTrackKind: base_config_1.TYPE,
    TextTrackMode: base_config_1.TYPE,
    TouchType: base_config_1.TYPE,
    UserVerificationRequirement: base_config_1.TYPE,
    VRDisplayEventReason: base_config_1.TYPE,
    VideoFacingModeEnum: base_config_1.TYPE,
    VisibilityState: base_config_1.TYPE,
    WebGLPowerPreference: base_config_1.TYPE,
    WorkerType: base_config_1.TYPE,
    XMLHttpRequestResponseType: base_config_1.TYPE,
=======
exports.dom = {
    Account: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Account',
    },
    AddEventListenerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AddEventListenerOptions',
    },
    AesCbcParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesCbcParams',
    },
    AesCtrParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesCtrParams',
    },
    AesDerivedKeyParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesDerivedKeyParams',
    },
    AesGcmParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesGcmParams',
    },
    AesKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesKeyAlgorithm',
    },
    AesKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesKeyGenParams',
    },
    Algorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Algorithm',
    },
    AnalyserOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnalyserOptions',
    },
    AnimationEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnimationEventInit',
    },
    AnimationPlaybackEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnimationPlaybackEventInit',
    },
    AssertionOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AssertionOptions',
    },
    AssignedNodesOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AssignedNodesOptions',
    },
    AudioBufferOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioBufferOptions',
    },
    AudioBufferSourceOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioBufferSourceOptions',
    },
    AudioContextInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioContextInfo',
    },
    AudioContextOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioContextOptions',
    },
    AudioNodeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioNodeOptions',
    },
    AudioParamDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioParamDescriptor',
    },
    AudioProcessingEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioProcessingEventInit',
    },
    AudioTimestamp: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioTimestamp',
    },
    AudioWorkletNodeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioWorkletNodeOptions',
    },
    AuthenticationExtensionsClientInputs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AuthenticationExtensionsClientInputs',
    },
    AuthenticationExtensionsClientOutputs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AuthenticationExtensionsClientOutputs',
    },
    AuthenticatorSelectionCriteria: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AuthenticatorSelectionCriteria',
    },
    BiquadFilterOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BiquadFilterOptions',
    },
    BlobPropertyBag: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BlobPropertyBag',
    },
    ByteLengthChunk: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ByteLengthChunk',
    },
    CacheQueryOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CacheQueryOptions',
    },
    CanvasRenderingContext2DSettings: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasRenderingContext2DSettings',
    },
    ChannelMergerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ChannelMergerOptions',
    },
    ChannelSplitterOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ChannelSplitterOptions',
    },
    ClientData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ClientData',
    },
    ClientQueryOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ClientQueryOptions',
    },
    ClipboardEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ClipboardEventInit',
    },
    CloseEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CloseEventInit',
    },
    CompositionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CompositionEventInit',
    },
    ComputedEffectTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ComputedEffectTiming',
    },
    ComputedKeyframe: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ComputedKeyframe',
    },
    ConfirmSiteSpecificExceptionsInformation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConfirmSiteSpecificExceptionsInformation',
    },
    ConstantSourceOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstantSourceOptions',
    },
    ConstrainBooleanParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainBooleanParameters',
    },
    ConstrainDOMStringParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainDOMStringParameters',
    },
    ConstrainDoubleRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainDoubleRange',
    },
    ConstrainULongRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainULongRange',
    },
    ConstrainVideoFacingModeParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainVideoFacingModeParameters',
    },
    ConvolverOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConvolverOptions',
    },
    CredentialCreationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CredentialCreationOptions',
    },
    CredentialPropertiesOutput: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CredentialPropertiesOutput',
    },
    CredentialRequestOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CredentialRequestOptions',
    },
    CustomEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CustomEventInit',
    },
    DOMMatrix2DInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMMatrix2DInit',
    },
    DOMMatrixInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMMatrixInit',
    },
    DOMPointInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMPointInit',
    },
    DOMQuadInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMQuadInit',
    },
    DOMRectInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMRectInit',
    },
    DelayOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DelayOptions',
    },
    DeviceLightEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceLightEventInit',
    },
    DeviceMotionEventAccelerationInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceMotionEventAccelerationInit',
    },
    DeviceMotionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceMotionEventInit',
    },
    DeviceMotionEventRotationRateInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceMotionEventRotationRateInit',
    },
    DeviceOrientationEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceOrientationEventInit',
    },
    DevicePermissionDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DevicePermissionDescriptor',
    },
    DocumentTimelineOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentTimelineOptions',
    },
    DoubleRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DoubleRange',
    },
    DragEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DragEventInit',
    },
    DynamicsCompressorOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DynamicsCompressorOptions',
    },
    EcKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EcKeyAlgorithm',
    },
    EcKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EcKeyGenParams',
    },
    EcKeyImportParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EcKeyImportParams',
    },
    EcdhKeyDeriveParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EcdhKeyDeriveParams',
    },
    EcdsaParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EcdsaParams',
    },
    EffectTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EffectTiming',
    },
    ElementCreationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementCreationOptions',
    },
    ElementDefinitionOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementDefinitionOptions',
    },
    ErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ErrorEventInit',
    },
    EventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventInit',
    },
    EventListenerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventListenerOptions',
    },
    EventModifierInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventModifierInit',
    },
    EventSourceInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventSourceInit',
    },
    ExceptionInformation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ExceptionInformation',
    },
    FilePropertyBag: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FilePropertyBag',
    },
    FocusEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FocusEventInit',
    },
    FocusNavigationEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FocusNavigationEventInit',
    },
    FocusNavigationOrigin: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FocusNavigationOrigin',
    },
    FocusOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FocusOptions',
    },
    FullscreenOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FullscreenOptions',
    },
    GainOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GainOptions',
    },
    GamepadEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GamepadEventInit',
    },
    GetNotificationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GetNotificationOptions',
    },
    GetRootNodeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GetRootNodeOptions',
    },
    HashChangeEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HashChangeEventInit',
    },
    HkdfParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HkdfParams',
    },
    HmacImportParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HmacImportParams',
    },
    HmacKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HmacKeyAlgorithm',
    },
    HmacKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HmacKeyGenParams',
    },
    IDBIndexParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBIndexParameters',
    },
    IDBObjectStoreParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBObjectStoreParameters',
    },
    IDBVersionChangeEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBVersionChangeEventInit',
    },
    IIRFilterOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IIRFilterOptions',
    },
    ImageBitmapOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageBitmapOptions',
    },
    ImageBitmapRenderingContextSettings: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageBitmapRenderingContextSettings',
    },
    ImageEncodeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageEncodeOptions',
    },
    ImportMeta: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImportMeta',
    },
    InputEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'InputEventInit',
    },
    IntersectionObserverEntryInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IntersectionObserverEntryInit',
    },
    IntersectionObserverInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IntersectionObserverInit',
    },
    JsonWebKey: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'JsonWebKey',
    },
    KeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyAlgorithm',
    },
    KeyboardEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyboardEventInit',
    },
    Keyframe: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Keyframe',
    },
    KeyframeAnimationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyframeAnimationOptions',
    },
    KeyframeEffectOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyframeEffectOptions',
    },
    MediaElementAudioSourceOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaElementAudioSourceOptions',
    },
    MediaEncryptedEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaEncryptedEventInit',
    },
    MediaKeyMessageEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeyMessageEventInit',
    },
    MediaKeySystemConfiguration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeySystemConfiguration',
    },
    MediaKeySystemMediaCapability: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeySystemMediaCapability',
    },
    MediaQueryListEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaQueryListEventInit',
    },
    MediaStreamAudioSourceOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamAudioSourceOptions',
    },
    MediaStreamConstraints: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamConstraints',
    },
    MediaStreamErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamErrorEventInit',
    },
    MediaStreamEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamEventInit',
    },
    MediaStreamTrackAudioSourceOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamTrackAudioSourceOptions',
    },
    MediaStreamTrackEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamTrackEventInit',
    },
    MediaTrackCapabilities: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaTrackCapabilities',
    },
    MediaTrackConstraintSet: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaTrackConstraintSet',
    },
    MediaTrackConstraints: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaTrackConstraints',
    },
    MediaTrackSettings: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaTrackSettings',
    },
    MediaTrackSupportedConstraints: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaTrackSupportedConstraints',
    },
    MessageEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MessageEventInit',
    },
    MidiPermissionDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MidiPermissionDescriptor',
    },
    MouseEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MouseEventInit',
    },
    MultiCacheQueryOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MultiCacheQueryOptions',
    },
    MutationObserverInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MutationObserverInit',
    },
    NavigationPreloadState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigationPreloadState',
    },
    NotificationAction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationAction',
    },
    NotificationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationOptions',
    },
    OfflineAudioCompletionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OfflineAudioCompletionEventInit',
    },
    OfflineAudioContextOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OfflineAudioContextOptions',
    },
    OptionalEffectTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OptionalEffectTiming',
    },
    OscillatorOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OscillatorOptions',
    },
    PageTransitionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PageTransitionEventInit',
    },
    PannerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PannerOptions',
    },
    PaymentCurrencyAmount: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentCurrencyAmount',
    },
    PaymentDetailsBase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentDetailsBase',
    },
    PaymentDetailsInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentDetailsInit',
    },
    PaymentDetailsModifier: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentDetailsModifier',
    },
    PaymentDetailsUpdate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentDetailsUpdate',
    },
    PaymentItem: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentItem',
    },
    PaymentMethodData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentMethodData',
    },
    PaymentOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentOptions',
    },
    PaymentRequestUpdateEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentRequestUpdateEventInit',
    },
    PaymentShippingOption: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentShippingOption',
    },
    Pbkdf2Params: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Pbkdf2Params',
    },
    PerformanceObserverInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PerformanceObserverInit',
    },
    PeriodicWaveConstraints: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PeriodicWaveConstraints',
    },
    PeriodicWaveOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PeriodicWaveOptions',
    },
    PermissionDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PermissionDescriptor',
    },
    PointerEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PointerEventInit',
    },
    PopStateEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PopStateEventInit',
    },
    PositionOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PositionOptions',
    },
    PostMessageOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PostMessageOptions',
    },
    ProgressEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ProgressEventInit',
    },
    PromiseRejectionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PromiseRejectionEventInit',
    },
    PropertyIndexedKeyframes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PropertyIndexedKeyframes',
    },
    PublicKeyCredentialCreationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialCreationOptions',
    },
    PublicKeyCredentialDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialDescriptor',
    },
    PublicKeyCredentialEntity: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialEntity',
    },
    PublicKeyCredentialParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialParameters',
    },
    PublicKeyCredentialRequestOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialRequestOptions',
    },
    PublicKeyCredentialRpEntity: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialRpEntity',
    },
    PublicKeyCredentialUserEntity: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialUserEntity',
    },
    PushPermissionDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PushPermissionDescriptor',
    },
    PushSubscriptionJSON: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PushSubscriptionJSON',
    },
    PushSubscriptionOptionsInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PushSubscriptionOptionsInit',
    },
    QueuingStrategy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'QueuingStrategy',
    },
    QueuingStrategyInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'QueuingStrategyInit',
    },
    RTCAnswerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCAnswerOptions',
    },
    RTCCertificateExpiration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCCertificateExpiration',
    },
    RTCConfiguration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCConfiguration',
    },
    RTCDTMFToneChangeEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDTMFToneChangeEventInit',
    },
    RTCDataChannelEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDataChannelEventInit',
    },
    RTCDataChannelInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDataChannelInit',
    },
    RTCDtlsFingerprint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtlsFingerprint',
    },
    RTCDtlsParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtlsParameters',
    },
    RTCErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCErrorEventInit',
    },
    RTCErrorInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCErrorInit',
    },
    RTCIceCandidateAttributes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidateAttributes',
    },
    RTCIceCandidateComplete: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidateComplete',
    },
    RTCIceCandidateDictionary: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidateDictionary',
    },
    RTCIceCandidateInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidateInit',
    },
    RTCIceCandidatePair: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidatePair',
    },
    RTCIceCandidatePairStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidatePairStats',
    },
    RTCIceGatherOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGatherOptions',
    },
    RTCIceParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceParameters',
    },
    RTCIceServer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceServer',
    },
    RTCIdentityProviderOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIdentityProviderOptions',
    },
    RTCInboundRTPStreamStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCInboundRTPStreamStats',
    },
    RTCMediaStreamTrackStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCMediaStreamTrackStats',
    },
    RTCOAuthCredential: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCOAuthCredential',
    },
    RTCOfferAnswerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCOfferAnswerOptions',
    },
    RTCOfferOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCOfferOptions',
    },
    RTCOutboundRTPStreamStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCOutboundRTPStreamStats',
    },
    RTCPeerConnectionIceErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPeerConnectionIceErrorEventInit',
    },
    RTCPeerConnectionIceEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPeerConnectionIceEventInit',
    },
    RTCRTPStreamStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRTPStreamStats',
    },
    RTCRtcpFeedback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtcpFeedback',
    },
    RTCRtcpParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtcpParameters',
    },
    RTCRtpCapabilities: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpCapabilities',
    },
    RTCRtpCodecCapability: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpCodecCapability',
    },
    RTCRtpCodecParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpCodecParameters',
    },
    RTCRtpCodingParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpCodingParameters',
    },
    RTCRtpContributingSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpContributingSource',
    },
    RTCRtpDecodingParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpDecodingParameters',
    },
    RTCRtpEncodingParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpEncodingParameters',
    },
    RTCRtpFecParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpFecParameters',
    },
    RTCRtpHeaderExtension: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpHeaderExtension',
    },
    RTCRtpHeaderExtensionCapability: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpHeaderExtensionCapability',
    },
    RTCRtpHeaderExtensionParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpHeaderExtensionParameters',
    },
    RTCRtpParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpParameters',
    },
    RTCRtpReceiveParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpReceiveParameters',
    },
    RTCRtpRtxParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpRtxParameters',
    },
    RTCRtpSendParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpSendParameters',
    },
    RTCRtpSynchronizationSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpSynchronizationSource',
    },
    RTCRtpTransceiverInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpTransceiverInit',
    },
    RTCRtpUnhandled: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpUnhandled',
    },
    RTCSessionDescriptionInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSessionDescriptionInit',
    },
    RTCSrtpKeyParam: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSrtpKeyParam',
    },
    RTCSrtpSdesParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSrtpSdesParameters',
    },
    RTCSsrcRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSsrcRange',
    },
    RTCStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStats',
    },
    RTCStatsEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStatsEventInit',
    },
    RTCStatsReport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCStatsReport',
    },
    RTCTrackEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCTrackEventInit',
    },
    RTCTransportStats: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCTransportStats',
    },
    ReadableStreamDefaultReadDoneResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamDefaultReadDoneResult',
    },
    ReadableStreamDefaultReadValueResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamDefaultReadValueResult',
    },
    ReadableWritablePair: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableWritablePair',
    },
    RegistrationOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RegistrationOptions',
    },
    RequestInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestInit',
    },
    ResizeObserverOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResizeObserverOptions',
    },
    ResponseInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResponseInit',
    },
    RsaHashedImportParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaHashedImportParams',
    },
    RsaHashedKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaHashedKeyAlgorithm',
    },
    RsaHashedKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaHashedKeyGenParams',
    },
    RsaKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaKeyAlgorithm',
    },
    RsaKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaKeyGenParams',
    },
    RsaOaepParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaOaepParams',
    },
    RsaOtherPrimesInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaOtherPrimesInfo',
    },
    RsaPssParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RsaPssParams',
    },
    SVGBoundingBoxOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGBoundingBoxOptions',
    },
    ScopedCredentialDescriptor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScopedCredentialDescriptor',
    },
    ScopedCredentialOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScopedCredentialOptions',
    },
    ScopedCredentialParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScopedCredentialParameters',
    },
    ScrollIntoViewOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollIntoViewOptions',
    },
    ScrollOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollOptions',
    },
    ScrollToOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollToOptions',
    },
    SecurityPolicyViolationEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SecurityPolicyViolationEventInit',
    },
    ServiceWorkerMessageEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerMessageEventInit',
    },
    ShadowRootInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ShadowRootInit',
    },
    ShareData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ShareData',
    },
    SpeechRecognitionErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechRecognitionErrorEventInit',
    },
    SpeechRecognitionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechRecognitionEventInit',
    },
    SpeechSynthesisErrorEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechSynthesisErrorEventInit',
    },
    SpeechSynthesisEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechSynthesisEventInit',
    },
    StaticRangeInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StaticRangeInit',
    },
    StereoPannerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StereoPannerOptions',
    },
    StorageEstimate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StorageEstimate',
    },
    StorageEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StorageEventInit',
    },
    StoreExceptionsInformation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StoreExceptionsInformation',
    },
    StoreSiteSpecificExceptionsInformation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StoreSiteSpecificExceptionsInformation',
    },
    StreamPipeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'StreamPipeOptions',
    },
    TextDecodeOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextDecodeOptions',
    },
    TextDecoderOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextDecoderOptions',
    },
    TextEncoderEncodeIntoResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextEncoderEncodeIntoResult',
    },
    TouchEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TouchEventInit',
    },
    TouchInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TouchInit',
    },
    TrackEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TrackEventInit',
    },
    Transformer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Transformer',
    },
    TransitionEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TransitionEventInit',
    },
    UIEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UIEventInit',
    },
    ULongRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ULongRange',
    },
    UnderlyingSink: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSink',
    },
    UnderlyingSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSource',
    },
    VRDisplayEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VRDisplayEventInit',
    },
    VRLayer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VRLayer',
    },
    VRStageParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VRStageParameters',
    },
    WaveShaperOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WaveShaperOptions',
    },
    WebAuthnExtensions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebAuthnExtensions',
    },
    WebGLContextAttributes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLContextAttributes',
    },
    WebGLContextEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLContextEventInit',
    },
    WheelEventInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WheelEventInit',
    },
    WorkerOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WorkerOptions',
    },
    WorkletOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WorkletOptions',
    },
    EventListener: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventListener',
    },
    XPathNSResolver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'XPathNSResolver',
    },
    ANGLE_instanced_arrays: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ANGLE_instanced_arrays',
    },
    AbortController: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AbortController',
    },
    AbortSignalEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AbortSignalEventMap',
    },
    AbortSignal: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AbortSignal',
    },
    AbstractRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AbstractRange',
    },
    AbstractWorkerEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AbstractWorkerEventMap',
    },
    AbstractWorker: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AbstractWorker',
    },
    AesCfbParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesCfbParams',
    },
    AesCmacParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AesCmacParams',
    },
    AnalyserNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AnalyserNode',
    },
    Animatable: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Animatable',
    },
    AnimationEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnimationEventMap',
    },
    Animation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Animation',
    },
    AnimationEffect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AnimationEffect',
    },
    AnimationEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AnimationEvent',
    },
    AnimationFrameProvider: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnimationFrameProvider',
    },
    AnimationPlaybackEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AnimationPlaybackEvent',
    },
    AnimationTimeline: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AnimationTimeline',
    },
    ApplicationCacheEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ApplicationCacheEventMap',
    },
    ApplicationCache: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ApplicationCache',
    },
    Attr: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Attr',
    },
    AudioBuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioBuffer',
    },
    AudioBufferSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioBufferSourceNode',
    },
    AudioContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioContext',
    },
    AudioDestinationNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioDestinationNode',
    },
    AudioListener: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioListener',
    },
    AudioNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioNode',
    },
    AudioParam: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioParam',
    },
    AudioParamMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioParamMap',
    },
    AudioProcessingEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioProcessingEvent',
    },
    AudioScheduledSourceNodeEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioScheduledSourceNodeEventMap',
    },
    AudioScheduledSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioScheduledSourceNode',
    },
    AudioWorklet: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioWorklet',
    },
    AudioWorkletNodeEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioWorkletNodeEventMap',
    },
    AudioWorkletNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AudioWorkletNode',
    },
    AuthenticatorAssertionResponse: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AuthenticatorAssertionResponse',
    },
    AuthenticatorAttestationResponse: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AuthenticatorAttestationResponse',
    },
    AuthenticatorResponse: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'AuthenticatorResponse',
    },
    BarProp: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BarProp',
    },
    BaseAudioContextEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BaseAudioContextEventMap',
    },
    BaseAudioContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BaseAudioContext',
    },
    BeforeUnloadEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BeforeUnloadEvent',
    },
    BhxBrowser: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BhxBrowser',
    },
    BiquadFilterNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BiquadFilterNode',
    },
    Blob: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Blob',
    },
    Body: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Body',
    },
    BroadcastChannelEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BroadcastChannelEventMap',
    },
    BroadcastChannel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'BroadcastChannel',
    },
    ByteLengthQueuingStrategy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ByteLengthQueuingStrategy',
    },
    CDATASection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CDATASection',
    },
    CSSConditionRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSConditionRule',
    },
    CSSFontFaceRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSFontFaceRule',
    },
    CSSGroupingRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSGroupingRule',
    },
    CSSImportRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSImportRule',
    },
    CSSKeyframeRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSKeyframeRule',
    },
    CSSKeyframesRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSKeyframesRule',
    },
    CSSMediaRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSMediaRule',
    },
    CSSNamespaceRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSNamespaceRule',
    },
    CSSPageRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSPageRule',
    },
    CSSRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSRule',
    },
    CSSRuleList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSRuleList',
    },
    CSSStyleDeclaration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSStyleDeclaration',
    },
    CSSStyleRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSStyleRule',
    },
    CSSStyleSheet: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSStyleSheet',
    },
    CSSSupportsRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSSSupportsRule',
    },
    Cache: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Cache',
    },
    CacheStorage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CacheStorage',
    },
    CanvasCompositing: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasCompositing',
    },
    CanvasDrawImage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasDrawImage',
    },
    CanvasDrawPath: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasDrawPath',
    },
    CanvasFillStrokeStyles: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasFillStrokeStyles',
    },
    CanvasFilters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasFilters',
    },
    CanvasGradient: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CanvasGradient',
    },
    CanvasImageData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasImageData',
    },
    CanvasImageSmoothing: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasImageSmoothing',
    },
    CanvasPath: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasPath',
    },
    CanvasPathDrawingStyles: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasPathDrawingStyles',
    },
    CanvasPattern: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CanvasPattern',
    },
    CanvasRect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasRect',
    },
    CanvasRenderingContext2D: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CanvasRenderingContext2D',
    },
    CanvasShadowStyles: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasShadowStyles',
    },
    CanvasState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasState',
    },
    CanvasText: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasText',
    },
    CanvasTextDrawingStyles: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasTextDrawingStyles',
    },
    CanvasTransform: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasTransform',
    },
    CanvasUserInterface: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasUserInterface',
    },
    CaretPosition: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CaretPosition',
    },
    ChannelMergerNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ChannelMergerNode',
    },
    ChannelSplitterNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ChannelSplitterNode',
    },
    CharacterData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CharacterData',
    },
    ChildNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ChildNode',
    },
    ClientRect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ClientRect',
    },
    ClientRectList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ClientRectList',
    },
    Clipboard: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Clipboard',
    },
    ClipboardEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ClipboardEvent',
    },
    CloseEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CloseEvent',
    },
    Comment: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Comment',
    },
    CompositionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CompositionEvent',
    },
    ConcatParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConcatParams',
    },
    ConstantSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ConstantSourceNode',
    },
    ConvolverNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ConvolverNode',
    },
    CountQueuingStrategy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CountQueuingStrategy',
    },
    Credential: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Credential',
    },
    CredentialsContainer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CredentialsContainer',
    },
    Crypto: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Crypto',
    },
    CryptoKey: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CryptoKey',
    },
    CryptoKeyPair: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CryptoKeyPair',
    },
    CustomElementRegistry: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CustomElementRegistry',
    },
    CustomEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CustomEvent',
    },
    DOMError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMError',
    },
    DOMException: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMException',
    },
    DOMImplementation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMImplementation',
    },
    DOML2DeprecatedColorProperty: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOML2DeprecatedColorProperty',
    },
    DOMMatrix: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMMatrix',
    },
    SVGMatrix: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGMatrix',
    },
    WebKitCSSMatrix: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebKitCSSMatrix',
    },
    DOMMatrixReadOnly: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMMatrixReadOnly',
    },
    DOMParser: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMParser',
    },
    DOMPoint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMPoint',
    },
    SVGPoint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPoint',
    },
    DOMPointReadOnly: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMPointReadOnly',
    },
    DOMQuad: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMQuad',
    },
    DOMRect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMRect',
    },
    SVGRect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGRect',
    },
    DOMRectList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMRectList',
    },
    DOMRectReadOnly: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMRectReadOnly',
    },
    DOMSettableTokenList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMSettableTokenList',
    },
    DOMStringList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMStringList',
    },
    DOMStringMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMStringMap',
    },
    DOMTokenList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DOMTokenList',
    },
    DataCue: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DataCue',
    },
    DataTransfer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DataTransfer',
    },
    DataTransferItem: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DataTransferItem',
    },
    DataTransferItemList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DataTransferItemList',
    },
    DeferredPermissionRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeferredPermissionRequest',
    },
    DelayNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DelayNode',
    },
    DeviceAcceleration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeviceAcceleration',
    },
    DeviceLightEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeviceLightEvent',
    },
    DeviceMotionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeviceMotionEvent',
    },
    DeviceMotionEventAcceleration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceMotionEventAcceleration',
    },
    DeviceMotionEventRotationRate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DeviceMotionEventRotationRate',
    },
    DeviceOrientationEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeviceOrientationEvent',
    },
    DeviceRotationRate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DeviceRotationRate',
    },
    DhImportKeyParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DhImportKeyParams',
    },
    DhKeyAlgorithm: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DhKeyAlgorithm',
    },
    DhKeyDeriveParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DhKeyDeriveParams',
    },
    DhKeyGenParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DhKeyGenParams',
    },
    DocumentEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentEventMap',
    },
    Document: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Document',
    },
    DocumentAndElementEventHandlersEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentAndElementEventHandlersEventMap',
    },
    DocumentAndElementEventHandlers: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentAndElementEventHandlers',
    },
    DocumentEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentEvent',
    },
    DocumentFragment: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DocumentFragment',
    },
    DocumentOrShadowRoot: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentOrShadowRoot',
    },
    DocumentTimeline: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DocumentTimeline',
    },
    DocumentType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DocumentType',
    },
    DragEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DragEvent',
    },
    DynamicsCompressorNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'DynamicsCompressorNode',
    },
    EXT_blend_minmax: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EXT_blend_minmax',
    },
    EXT_frag_depth: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EXT_frag_depth',
    },
    EXT_sRGB: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EXT_sRGB',
    },
    EXT_shader_texture_lod: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EXT_shader_texture_lod',
    },
    EXT_texture_filter_anisotropic: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EXT_texture_filter_anisotropic',
    },
    ElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementEventMap',
    },
    Element: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Element',
    },
    ElementCSSInlineStyle: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementCSSInlineStyle',
    },
    ElementContentEditable: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementContentEditable',
    },
    ErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ErrorEvent',
    },
    Event: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Event',
    },
    EventListenerObject: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventListenerObject',
    },
    EventSourceEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventSourceEventMap',
    },
    EventSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'EventSource',
    },
    EventTarget: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'EventTarget',
    },
    ExtensionScriptApis: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ExtensionScriptApis',
    },
    External: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'External',
    },
    File: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'File',
    },
    FileList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'FileList',
    },
    FileReaderEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FileReaderEventMap',
    },
    FileReader: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'FileReader',
    },
    FocusEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'FocusEvent',
    },
    FocusNavigationEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'FocusNavigationEvent',
    },
    FormData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'FormData',
    },
    GainNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GainNode',
    },
    Gamepad: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Gamepad',
    },
    GamepadButton: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GamepadButton',
    },
    GamepadEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GamepadEvent',
    },
    GamepadHapticActuator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GamepadHapticActuator',
    },
    GamepadPose: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GamepadPose',
    },
    GenericTransformStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GenericTransformStream',
    },
    Geolocation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Geolocation',
    },
    GeolocationCoordinates: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GeolocationCoordinates',
    },
    GeolocationPosition: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GeolocationPosition',
    },
    GeolocationPositionError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'GeolocationPositionError',
    },
    GlobalEventHandlersEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GlobalEventHandlersEventMap',
    },
    GlobalEventHandlers: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GlobalEventHandlers',
    },
    HTMLAllCollection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLAllCollection',
    },
    HTMLAnchorElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLAnchorElement',
    },
    HTMLAppletElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLAppletElement',
    },
    HTMLAreaElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLAreaElement',
    },
    HTMLAudioElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLAudioElement',
    },
    HTMLBRElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLBRElement',
    },
    HTMLBaseElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLBaseElement',
    },
    HTMLBaseFontElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLBaseFontElement',
    },
    HTMLBodyElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLBodyElementEventMap',
    },
    HTMLBodyElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLBodyElement',
    },
    HTMLButtonElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLButtonElement',
    },
    HTMLCanvasElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLCanvasElement',
    },
    HTMLCollectionBase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLCollectionBase',
    },
    HTMLCollection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLCollection',
    },
    HTMLCollectionOf: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLCollectionOf',
    },
    HTMLDListElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDListElement',
    },
    HTMLDataElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDataElement',
    },
    HTMLDataListElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDataListElement',
    },
    HTMLDetailsElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDetailsElement',
    },
    HTMLDialogElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDialogElement',
    },
    HTMLDirectoryElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDirectoryElement',
    },
    HTMLDivElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDivElement',
    },
    HTMLDocument: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLDocument',
    },
    HTMLElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLElementEventMap',
    },
    HTMLElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLElement',
    },
    HTMLEmbedElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLEmbedElement',
    },
    HTMLFieldSetElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFieldSetElement',
    },
    HTMLFontElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFontElement',
    },
    HTMLFormControlsCollection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFormControlsCollection',
    },
    HTMLFormElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFormElement',
    },
    HTMLFrameElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFrameElement',
    },
    HTMLFrameSetElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLFrameSetElementEventMap',
    },
    HTMLFrameSetElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLFrameSetElement',
    },
    HTMLHRElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLHRElement',
    },
    HTMLHeadElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLHeadElement',
    },
    HTMLHeadingElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLHeadingElement',
    },
    HTMLHtmlElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLHtmlElement',
    },
    HTMLHyperlinkElementUtils: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLHyperlinkElementUtils',
    },
    HTMLIFrameElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLIFrameElement',
    },
    HTMLImageElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLImageElement',
    },
    HTMLInputElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLInputElement',
    },
    HTMLLIElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLLIElement',
    },
    HTMLLabelElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLLabelElement',
    },
    HTMLLegendElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLLegendElement',
    },
    HTMLLinkElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLLinkElement',
    },
    HTMLMapElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMapElement',
    },
    HTMLMarqueeElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLMarqueeElementEventMap',
    },
    HTMLMarqueeElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMarqueeElement',
    },
    HTMLMediaElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLMediaElementEventMap',
    },
    HTMLMediaElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMediaElement',
    },
    HTMLMenuElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMenuElement',
    },
    HTMLMetaElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMetaElement',
    },
    HTMLMeterElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLMeterElement',
    },
    HTMLModElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLModElement',
    },
    HTMLOListElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLOListElement',
    },
    HTMLObjectElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLObjectElement',
    },
    HTMLOptGroupElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLOptGroupElement',
    },
    HTMLOptionElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLOptionElement',
    },
    HTMLOptionsCollection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLOptionsCollection',
    },
    HTMLOrSVGElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLOrSVGElement',
    },
    HTMLOutputElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLOutputElement',
    },
    HTMLParagraphElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLParagraphElement',
    },
    HTMLParamElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLParamElement',
    },
    HTMLPictureElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLPictureElement',
    },
    HTMLPreElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLPreElement',
    },
    HTMLProgressElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLProgressElement',
    },
    HTMLQuoteElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLQuoteElement',
    },
    HTMLScriptElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLScriptElement',
    },
    HTMLSelectElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLSelectElement',
    },
    HTMLSlotElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLSlotElement',
    },
    HTMLSourceElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLSourceElement',
    },
    HTMLSpanElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLSpanElement',
    },
    HTMLStyleElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLStyleElement',
    },
    HTMLTableCaptionElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableCaptionElement',
    },
    HTMLTableCellElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableCellElement',
    },
    HTMLTableColElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableColElement',
    },
    HTMLTableDataCellElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableDataCellElement',
    },
    HTMLTableElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableElement',
    },
    HTMLTableHeaderCellElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableHeaderCellElement',
    },
    HTMLTableRowElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableRowElement',
    },
    HTMLTableSectionElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTableSectionElement',
    },
    HTMLTemplateElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTemplateElement',
    },
    HTMLTextAreaElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTextAreaElement',
    },
    HTMLTimeElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTimeElement',
    },
    HTMLTitleElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTitleElement',
    },
    HTMLTrackElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLTrackElement',
    },
    HTMLUListElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLUListElement',
    },
    HTMLUnknownElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLUnknownElement',
    },
    HTMLVideoElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HTMLVideoElement',
    },
    HashChangeEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'HashChangeEvent',
    },
    Headers: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Headers',
    },
    History: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'History',
    },
    IDBArrayKey: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBArrayKey',
    },
    IDBCursor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBCursor',
    },
    IDBCursorWithValue: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBCursorWithValue',
    },
    IDBDatabaseEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBDatabaseEventMap',
    },
    IDBDatabase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBDatabase',
    },
    IDBFactory: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBFactory',
    },
    IDBIndex: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBIndex',
    },
    IDBKeyRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBKeyRange',
    },
    IDBObjectStore: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBObjectStore',
    },
    IDBOpenDBRequestEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBOpenDBRequestEventMap',
    },
    IDBOpenDBRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBOpenDBRequest',
    },
    IDBRequestEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBRequestEventMap',
    },
    IDBRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBRequest',
    },
    IDBTransactionEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBTransactionEventMap',
    },
    IDBTransaction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBTransaction',
    },
    IDBVersionChangeEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IDBVersionChangeEvent',
    },
    IIRFilterNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IIRFilterNode',
    },
    ImageBitmap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ImageBitmap',
    },
    ImageBitmapRenderingContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ImageBitmapRenderingContext',
    },
    ImageData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ImageData',
    },
    InnerHTML: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'InnerHTML',
    },
    InputDeviceInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'InputDeviceInfo',
    },
    InputEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'InputEvent',
    },
    IntersectionObserver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IntersectionObserver',
    },
    IntersectionObserverEntry: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'IntersectionObserverEntry',
    },
    KeyboardEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'KeyboardEvent',
    },
    KeyframeEffect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'KeyframeEffect',
    },
    LinkStyle: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'LinkStyle',
    },
    ListeningStateChangedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ListeningStateChangedEvent',
    },
    Location: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Location',
    },
    MSAssertion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSAssertion',
    },
    MSBlobBuilder: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSBlobBuilder',
    },
    MSFIDOCredentialAssertion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSFIDOCredentialAssertion',
    },
    MSFIDOSignature: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSFIDOSignature',
    },
    MSFIDOSignatureAssertion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSFIDOSignatureAssertion',
    },
    MSFileSaver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSFileSaver',
    },
    MSGesture: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSGesture',
    },
    MSGestureEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSGestureEvent',
    },
    MSGraphicsTrust: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSGraphicsTrust',
    },
    MSInputMethodContextEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSInputMethodContextEventMap',
    },
    MSInputMethodContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSInputMethodContext',
    },
    MSMediaKeyError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSMediaKeyError',
    },
    MSMediaKeyMessageEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSMediaKeyMessageEvent',
    },
    MSMediaKeyNeededEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSMediaKeyNeededEvent',
    },
    MSMediaKeySession: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSMediaKeySession',
    },
    MSMediaKeys: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSMediaKeys',
    },
    MSNavigatorDoNotTrack: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSNavigatorDoNotTrack',
    },
    MSPointerEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSPointerEvent',
    },
    MSStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MSStream',
    },
    MediaDeviceInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaDeviceInfo',
    },
    MediaDevicesEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaDevicesEventMap',
    },
    MediaDevices: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaDevices',
    },
    MediaElementAudioSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaElementAudioSourceNode',
    },
    MediaEncryptedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaEncryptedEvent',
    },
    MediaError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaError',
    },
    MediaKeyMessageEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaKeyMessageEvent',
    },
    MediaKeySessionEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeySessionEventMap',
    },
    MediaKeySession: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaKeySession',
    },
    MediaKeyStatusMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaKeyStatusMap',
    },
    MediaKeySystemAccess: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaKeySystemAccess',
    },
    MediaKeys: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaKeys',
    },
    MediaList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaList',
    },
    MediaQueryListEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaQueryListEventMap',
    },
    MediaQueryList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaQueryList',
    },
    MediaQueryListEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaQueryListEvent',
    },
    MediaSourceEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaSourceEventMap',
    },
    MediaSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaSource',
    },
    MediaStreamEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamEventMap',
    },
    MediaStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStream',
    },
    MediaStreamAudioDestinationNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamAudioDestinationNode',
    },
    MediaStreamAudioSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamAudioSourceNode',
    },
    MediaStreamError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamError',
    },
    MediaStreamErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamErrorEvent',
    },
    MediaStreamEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamEvent',
    },
    MediaStreamTrackEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamTrackEventMap',
    },
    MediaStreamTrack: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamTrack',
    },
    MediaStreamTrackAudioSourceNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamTrackAudioSourceNode',
    },
    MediaStreamTrackEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MediaStreamTrackEvent',
    },
    MessageChannel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MessageChannel',
    },
    MessageEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MessageEvent',
    },
    MessagePortEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MessagePortEventMap',
    },
    MessagePort: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MessagePort',
    },
    MimeType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MimeType',
    },
    MimeTypeArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MimeTypeArray',
    },
    MouseEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MouseEvent',
    },
    MutationEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MutationEvent',
    },
    MutationObserver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MutationObserver',
    },
    MutationRecord: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'MutationRecord',
    },
    NamedNodeMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'NamedNodeMap',
    },
    NavigationPreloadManager: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'NavigationPreloadManager',
    },
    Navigator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Navigator',
    },
    NavigatorAutomationInformation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorAutomationInformation',
    },
    NavigatorBeacon: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorBeacon',
    },
    NavigatorConcurrentHardware: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorConcurrentHardware',
    },
    NavigatorContentUtils: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorContentUtils',
    },
    NavigatorCookies: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorCookies',
    },
    NavigatorID: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorID',
    },
    NavigatorLanguage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorLanguage',
    },
    NavigatorOnLine: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorOnLine',
    },
    NavigatorPlugins: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorPlugins',
    },
    NavigatorStorage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorStorage',
    },
    Node: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Node',
    },
    NodeFilter: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'NodeFilter',
    },
    NodeIterator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'NodeIterator',
    },
    NodeList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'NodeList',
    },
    NodeListOf: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NodeListOf',
    },
    NonDocumentTypeChildNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NonDocumentTypeChildNode',
    },
    NonElementParentNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NonElementParentNode',
    },
    NotificationEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationEventMap',
    },
    Notification: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Notification',
    },
    OES_element_index_uint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_element_index_uint',
    },
    OES_standard_derivatives: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_standard_derivatives',
    },
    OES_texture_float: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_texture_float',
    },
    OES_texture_float_linear: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_texture_float_linear',
    },
    OES_texture_half_float: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_texture_half_float',
    },
    OES_texture_half_float_linear: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_texture_half_float_linear',
    },
    OES_vertex_array_object: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OES_vertex_array_object',
    },
    OfflineAudioCompletionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OfflineAudioCompletionEvent',
    },
    OfflineAudioContextEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OfflineAudioContextEventMap',
    },
    OfflineAudioContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OfflineAudioContext',
    },
    OffscreenCanvas: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OffscreenCanvas',
    },
    OffscreenCanvasRenderingContext2D: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OffscreenCanvasRenderingContext2D',
    },
    OscillatorNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OscillatorNode',
    },
    OverconstrainedError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OverconstrainedError',
    },
    OverflowEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'OverflowEvent',
    },
    PageTransitionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PageTransitionEvent',
    },
    PannerNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PannerNode',
    },
    ParentNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ParentNode',
    },
    Path2D: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Path2D',
    },
    PaymentAddress: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PaymentAddress',
    },
    PaymentRequestEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentRequestEventMap',
    },
    PaymentRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PaymentRequest',
    },
    PaymentRequestUpdateEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PaymentRequestUpdateEvent',
    },
    PaymentResponse: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PaymentResponse',
    },
    PerfWidgetExternal: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerfWidgetExternal',
    },
    PerformanceEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PerformanceEventMap',
    },
    Performance: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Performance',
    },
    PerformanceEntry: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceEntry',
    },
    PerformanceMark: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceMark',
    },
    PerformanceMeasure: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceMeasure',
    },
    PerformanceNavigation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceNavigation',
    },
    PerformanceNavigationTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceNavigationTiming',
    },
    PerformanceObserver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceObserver',
    },
    PerformanceObserverEntryList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceObserverEntryList',
    },
    PerformanceResourceTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceResourceTiming',
    },
    PerformanceTiming: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PerformanceTiming',
    },
    PeriodicWave: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PeriodicWave',
    },
    PermissionRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PermissionRequest',
    },
    PermissionRequestedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PermissionRequestedEvent',
    },
    PermissionStatusEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PermissionStatusEventMap',
    },
    PermissionStatus: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PermissionStatus',
    },
    Permissions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Permissions',
    },
    Plugin: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Plugin',
    },
    PluginArray: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PluginArray',
    },
    PointerEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PointerEvent',
    },
    PopStateEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PopStateEvent',
    },
    ProcessingInstruction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ProcessingInstruction',
    },
    ProgressEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ProgressEvent',
    },
    PromiseRejectionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PromiseRejectionEvent',
    },
    PublicKeyCredential: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PublicKeyCredential',
    },
    PushManager: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PushManager',
    },
    PushSubscription: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PushSubscription',
    },
    PushSubscriptionOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'PushSubscriptionOptions',
    },
    RTCCertificate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCCertificate',
    },
    RTCDTMFSenderEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDTMFSenderEventMap',
    },
    RTCDTMFSender: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDTMFSender',
    },
    RTCDTMFToneChangeEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDTMFToneChangeEvent',
    },
    RTCDataChannelEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDataChannelEventMap',
    },
    RTCDataChannel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDataChannel',
    },
    RTCDataChannelEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDataChannelEvent',
    },
    RTCDtlsTransportEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtlsTransportEventMap',
    },
    RTCDtlsTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDtlsTransport',
    },
    RTCDtlsTransportStateChangedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDtlsTransportStateChangedEvent',
    },
    RTCDtmfSenderEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtmfSenderEventMap',
    },
    RTCDtmfSender: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCDtmfSender',
    },
    RTCError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCError',
    },
    RTCErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCErrorEvent',
    },
    RTCIceCandidate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceCandidate',
    },
    RTCIceCandidatePairChangedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceCandidatePairChangedEvent',
    },
    RTCIceGathererEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGathererEventMap',
    },
    RTCIceGatherer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceGatherer',
    },
    RTCIceGathererEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceGathererEvent',
    },
    RTCIceTransportEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceTransportEventMap',
    },
    RTCIceTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceTransport',
    },
    RTCIceTransportStateChangedEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIceTransportStateChangedEvent',
    },
    RTCIdentityAssertion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCIdentityAssertion',
    },
    RTCPeerConnectionEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPeerConnectionEventMap',
    },
    RTCPeerConnection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCPeerConnection',
    },
    RTCPeerConnectionIceErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCPeerConnectionIceErrorEvent',
    },
    RTCPeerConnectionIceEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCPeerConnectionIceEvent',
    },
    RTCRtpReceiver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCRtpReceiver',
    },
    RTCRtpSender: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCRtpSender',
    },
    RTCRtpTransceiver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCRtpTransceiver',
    },
    RTCSctpTransportEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSctpTransportEventMap',
    },
    RTCSctpTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCSctpTransport',
    },
    RTCSessionDescription: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCSessionDescription',
    },
    RTCSrtpSdesTransportEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSrtpSdesTransportEventMap',
    },
    RTCSrtpSdesTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCSrtpSdesTransport',
    },
    RTCSsrcConflictEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCSsrcConflictEvent',
    },
    RTCStatsEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCStatsEvent',
    },
    RTCStatsProvider: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCStatsProvider',
    },
    RTCTrackEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RTCTrackEvent',
    },
    RadioNodeList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RadioNodeList',
    },
    RandomSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'RandomSource',
    },
    Range: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Range',
    },
    ReadableStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ReadableStream',
    },
    ReadableStreamDefaultController: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ReadableStreamDefaultController',
    },
    ReadableStreamDefaultReader: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ReadableStreamDefaultReader',
    },
    ReadableStreamGenericReader: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamGenericReader',
    },
    Request: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Request',
    },
    ResizeObserver: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ResizeObserver',
    },
    ResizeObserverEntry: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ResizeObserverEntry',
    },
    ResizeObserverSize: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ResizeObserverSize',
    },
    Response: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Response',
    },
    SVGAElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAElement',
    },
    SVGAngle: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAngle',
    },
    SVGAnimateElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimateElement',
    },
    SVGAnimateMotionElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimateMotionElement',
    },
    SVGAnimateTransformElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimateTransformElement',
    },
    SVGAnimatedAngle: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedAngle',
    },
    SVGAnimatedBoolean: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedBoolean',
    },
    SVGAnimatedEnumeration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedEnumeration',
    },
    SVGAnimatedInteger: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedInteger',
    },
    SVGAnimatedLength: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedLength',
    },
    SVGAnimatedLengthList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedLengthList',
    },
    SVGAnimatedNumber: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedNumber',
    },
    SVGAnimatedNumberList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedNumberList',
    },
    SVGAnimatedPoints: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGAnimatedPoints',
    },
    SVGAnimatedPreserveAspectRatio: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedPreserveAspectRatio',
    },
    SVGAnimatedRect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedRect',
    },
    SVGAnimatedString: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedString',
    },
    SVGAnimatedTransformList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimatedTransformList',
    },
    SVGAnimationElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGAnimationElement',
    },
    SVGCircleElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGCircleElement',
    },
    SVGClipPathElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGClipPathElement',
    },
    SVGComponentTransferFunctionElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGComponentTransferFunctionElement',
    },
    SVGCursorElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGCursorElement',
    },
    SVGDefsElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGDefsElement',
    },
    SVGDescElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGDescElement',
    },
    SVGElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGElementEventMap',
    },
    SVGElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGElement',
    },
    SVGElementInstance: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGElementInstance',
    },
    SVGElementInstanceList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGElementInstanceList',
    },
    SVGEllipseElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGEllipseElement',
    },
    SVGFEBlendElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEBlendElement',
    },
    SVGFEColorMatrixElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEColorMatrixElement',
    },
    SVGFEComponentTransferElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEComponentTransferElement',
    },
    SVGFECompositeElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFECompositeElement',
    },
    SVGFEConvolveMatrixElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEConvolveMatrixElement',
    },
    SVGFEDiffuseLightingElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEDiffuseLightingElement',
    },
    SVGFEDisplacementMapElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEDisplacementMapElement',
    },
    SVGFEDistantLightElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEDistantLightElement',
    },
    SVGFEDropShadowElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEDropShadowElement',
    },
    SVGFEFloodElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEFloodElement',
    },
    SVGFEFuncAElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEFuncAElement',
    },
    SVGFEFuncBElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEFuncBElement',
    },
    SVGFEFuncGElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEFuncGElement',
    },
    SVGFEFuncRElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEFuncRElement',
    },
    SVGFEGaussianBlurElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEGaussianBlurElement',
    },
    SVGFEImageElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEImageElement',
    },
    SVGFEMergeElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEMergeElement',
    },
    SVGFEMergeNodeElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEMergeNodeElement',
    },
    SVGFEMorphologyElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEMorphologyElement',
    },
    SVGFEOffsetElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEOffsetElement',
    },
    SVGFEPointLightElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFEPointLightElement',
    },
    SVGFESpecularLightingElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFESpecularLightingElement',
    },
    SVGFESpotLightElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFESpotLightElement',
    },
    SVGFETileElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFETileElement',
    },
    SVGFETurbulenceElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFETurbulenceElement',
    },
    SVGFilterElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGFilterElement',
    },
    SVGFilterPrimitiveStandardAttributes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGFilterPrimitiveStandardAttributes',
    },
    SVGFitToViewBox: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGFitToViewBox',
    },
    SVGForeignObjectElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGForeignObjectElement',
    },
    SVGGElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGGElement',
    },
    SVGGeometryElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGGeometryElement',
    },
    SVGGradientElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGGradientElement',
    },
    SVGGraphicsElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGGraphicsElement',
    },
    SVGImageElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGImageElement',
    },
    SVGLength: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGLength',
    },
    SVGLengthList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGLengthList',
    },
    SVGLineElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGLineElement',
    },
    SVGLinearGradientElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGLinearGradientElement',
    },
    SVGMarkerElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGMarkerElement',
    },
    SVGMaskElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGMaskElement',
    },
    SVGMetadataElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGMetadataElement',
    },
    SVGNumber: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGNumber',
    },
    SVGNumberList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGNumberList',
    },
    SVGPathElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathElement',
    },
    SVGPathSeg: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSeg',
    },
    SVGPathSegArcAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegArcAbs',
    },
    SVGPathSegArcRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegArcRel',
    },
    SVGPathSegClosePath: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegClosePath',
    },
    SVGPathSegCurvetoCubicAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoCubicAbs',
    },
    SVGPathSegCurvetoCubicRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoCubicRel',
    },
    SVGPathSegCurvetoCubicSmoothAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoCubicSmoothAbs',
    },
    SVGPathSegCurvetoCubicSmoothRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoCubicSmoothRel',
    },
    SVGPathSegCurvetoQuadraticAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoQuadraticAbs',
    },
    SVGPathSegCurvetoQuadraticRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoQuadraticRel',
    },
    SVGPathSegCurvetoQuadraticSmoothAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoQuadraticSmoothAbs',
    },
    SVGPathSegCurvetoQuadraticSmoothRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegCurvetoQuadraticSmoothRel',
    },
    SVGPathSegLinetoAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoAbs',
    },
    SVGPathSegLinetoHorizontalAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoHorizontalAbs',
    },
    SVGPathSegLinetoHorizontalRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoHorizontalRel',
    },
    SVGPathSegLinetoRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoRel',
    },
    SVGPathSegLinetoVerticalAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoVerticalAbs',
    },
    SVGPathSegLinetoVerticalRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegLinetoVerticalRel',
    },
    SVGPathSegList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegList',
    },
    SVGPathSegMovetoAbs: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegMovetoAbs',
    },
    SVGPathSegMovetoRel: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPathSegMovetoRel',
    },
    SVGPatternElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPatternElement',
    },
    SVGPointList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPointList',
    },
    SVGPolygonElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPolygonElement',
    },
    SVGPolylineElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPolylineElement',
    },
    SVGPreserveAspectRatio: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGPreserveAspectRatio',
    },
    SVGRadialGradientElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGRadialGradientElement',
    },
    SVGRectElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGRectElement',
    },
    SVGSVGElementEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGSVGElementEventMap',
    },
    SVGSVGElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGSVGElement',
    },
    SVGScriptElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGScriptElement',
    },
    SVGStopElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGStopElement',
    },
    SVGStringList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGStringList',
    },
    SVGStyleElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGStyleElement',
    },
    SVGSwitchElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGSwitchElement',
    },
    SVGSymbolElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGSymbolElement',
    },
    SVGTSpanElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTSpanElement',
    },
    SVGTests: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGTests',
    },
    SVGTextContentElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTextContentElement',
    },
    SVGTextElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTextElement',
    },
    SVGTextPathElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTextPathElement',
    },
    SVGTextPositioningElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTextPositioningElement',
    },
    SVGTitleElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTitleElement',
    },
    SVGTransform: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTransform',
    },
    SVGTransformList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGTransformList',
    },
    SVGURIReference: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGURIReference',
    },
    SVGUnitTypes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGUnitTypes',
    },
    SVGUseElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGUseElement',
    },
    SVGViewElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGViewElement',
    },
    SVGZoomAndPan: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGZoomAndPan',
    },
    SVGZoomEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SVGZoomEvent',
    },
    ScopedCredential: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ScopedCredential',
    },
    ScopedCredentialInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ScopedCredentialInfo',
    },
    Screen: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Screen',
    },
    ScreenOrientationEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScreenOrientationEventMap',
    },
    ScreenOrientation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ScreenOrientation',
    },
    ScriptProcessorNodeEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScriptProcessorNodeEventMap',
    },
    ScriptProcessorNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ScriptProcessorNode',
    },
    SecurityPolicyViolationEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SecurityPolicyViolationEvent',
    },
    Selection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Selection',
    },
    ServiceUIFrameContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ServiceUIFrameContext',
    },
    ServiceWorkerEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerEventMap',
    },
    ServiceWorker: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ServiceWorker',
    },
    ServiceWorkerContainerEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerContainerEventMap',
    },
    ServiceWorkerContainer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ServiceWorkerContainer',
    },
    ServiceWorkerMessageEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ServiceWorkerMessageEvent',
    },
    ServiceWorkerRegistrationEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerRegistrationEventMap',
    },
    ServiceWorkerRegistration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ServiceWorkerRegistration',
    },
    ShadowRoot: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ShadowRoot',
    },
    SharedWorker: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SharedWorker',
    },
    Slottable: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Slottable',
    },
    SourceBufferEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SourceBufferEventMap',
    },
    SourceBuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SourceBuffer',
    },
    SourceBufferListEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SourceBufferListEventMap',
    },
    SourceBufferList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SourceBufferList',
    },
    SpeechGrammar: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechGrammar',
    },
    SpeechGrammarList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechGrammarList',
    },
    SpeechRecognitionEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechRecognitionEventMap',
    },
    SpeechRecognition: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognition',
    },
    SpeechRecognitionAlternative: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognitionAlternative',
    },
    SpeechRecognitionErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognitionErrorEvent',
    },
    SpeechRecognitionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognitionEvent',
    },
    SpeechRecognitionResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognitionResult',
    },
    SpeechRecognitionResultList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechRecognitionResultList',
    },
    SpeechSynthesisEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechSynthesisEventMap',
    },
    SpeechSynthesis: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechSynthesis',
    },
    SpeechSynthesisErrorEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechSynthesisErrorEvent',
    },
    SpeechSynthesisEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechSynthesisEvent',
    },
    SpeechSynthesisUtteranceEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechSynthesisUtteranceEventMap',
    },
    SpeechSynthesisUtterance: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechSynthesisUtterance',
    },
    SpeechSynthesisVoice: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SpeechSynthesisVoice',
    },
    StaticRange: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StaticRange',
    },
    StereoPannerNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StereoPannerNode',
    },
    Storage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Storage',
    },
    StorageEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StorageEvent',
    },
    StorageManager: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StorageManager',
    },
    StyleMedia: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StyleMedia',
    },
    StyleSheet: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StyleSheet',
    },
    StyleSheetList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'StyleSheetList',
    },
    SubtleCrypto: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SubtleCrypto',
    },
    SyncManager: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'SyncManager',
    },
    Text: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Text',
    },
    TextDecoder: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextDecoder',
    },
    TextDecoderCommon: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextDecoderCommon',
    },
    TextDecoderStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextDecoderStream',
    },
    TextEncoder: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextEncoder',
    },
    TextEncoderCommon: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextEncoderCommon',
    },
    TextEncoderStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextEncoderStream',
    },
    TextEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextEvent',
    },
    TextMetrics: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextMetrics',
    },
    TextTrackEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextTrackEventMap',
    },
    TextTrack: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextTrack',
    },
    TextTrackCueEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextTrackCueEventMap',
    },
    TextTrackCue: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextTrackCue',
    },
    TextTrackCueList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextTrackCueList',
    },
    TextTrackListEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextTrackListEventMap',
    },
    TextTrackList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TextTrackList',
    },
    TimeRanges: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TimeRanges',
    },
    Touch: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Touch',
    },
    TouchEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TouchEvent',
    },
    TouchList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TouchList',
    },
    TrackEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TrackEvent',
    },
    TransformStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TransformStream',
    },
    TransformStreamDefaultController: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TransformStreamDefaultController',
    },
    TransitionEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TransitionEvent',
    },
    TreeWalker: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'TreeWalker',
    },
    UIEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'UIEvent',
    },
    URL: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'URL',
    },
    webkitURL: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'webkitURL',
    },
    URLSearchParams: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'URLSearchParams',
    },
    VRDisplay: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRDisplay',
    },
    VRDisplayCapabilities: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRDisplayCapabilities',
    },
    VRDisplayEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRDisplayEvent',
    },
    VREyeParameters: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VREyeParameters',
    },
    VRFieldOfView: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRFieldOfView',
    },
    VRFrameData: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRFrameData',
    },
    VRPose: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VRPose',
    },
    VTTCue: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VTTCue',
    },
    VTTRegion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VTTRegion',
    },
    ValidityState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'ValidityState',
    },
    VideoPlaybackQuality: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VideoPlaybackQuality',
    },
    VisualViewportEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VisualViewportEventMap',
    },
    VisualViewport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'VisualViewport',
    },
    WEBGL_color_buffer_float: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_color_buffer_float',
    },
    WEBGL_compressed_texture_astc: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_compressed_texture_astc',
    },
    WEBGL_compressed_texture_s3tc: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_compressed_texture_s3tc',
    },
    WEBGL_compressed_texture_s3tc_srgb: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_compressed_texture_s3tc_srgb',
    },
    WEBGL_debug_renderer_info: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_debug_renderer_info',
    },
    WEBGL_debug_shaders: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_debug_shaders',
    },
    WEBGL_depth_texture: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_depth_texture',
    },
    WEBGL_draw_buffers: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_draw_buffers',
    },
    WEBGL_lose_context: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WEBGL_lose_context',
    },
    WaveShaperNode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WaveShaperNode',
    },
    WebAuthentication: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebAuthentication',
    },
    WebAuthnAssertion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebAuthnAssertion',
    },
    WebGL2RenderingContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGL2RenderingContext',
    },
    WebGL2RenderingContextBase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGL2RenderingContextBase',
    },
    WebGL2RenderingContextOverloads: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGL2RenderingContextOverloads',
    },
    WebGLActiveInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLActiveInfo',
    },
    WebGLBuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLBuffer',
    },
    WebGLContextEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLContextEvent',
    },
    WebGLFramebuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLFramebuffer',
    },
    WebGLObject: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLObject',
    },
    WebGLProgram: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLProgram',
    },
    WebGLQuery: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLQuery',
    },
    WebGLRenderbuffer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLRenderbuffer',
    },
    WebGLRenderingContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLRenderingContext',
    },
    WebGLRenderingContextBase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLRenderingContextBase',
    },
    WebGLRenderingContextOverloads: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLRenderingContextOverloads',
    },
    WebGLSampler: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLSampler',
    },
    WebGLShader: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLShader',
    },
    WebGLShaderPrecisionFormat: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLShaderPrecisionFormat',
    },
    WebGLSync: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLSync',
    },
    WebGLTexture: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLTexture',
    },
    WebGLTransformFeedback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLTransformFeedback',
    },
    WebGLUniformLocation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLUniformLocation',
    },
    WebGLVertexArrayObject: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebGLVertexArrayObject',
    },
    WebGLVertexArrayObjectOES: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLVertexArrayObjectOES',
    },
    WebKitPoint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebKitPoint',
    },
    WebSocketEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebSocketEventMap',
    },
    WebSocket: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebSocket',
    },
    WheelEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WheelEvent',
    },
    WindowEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowEventMap',
    },
    Window: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Window',
    },
    WindowEventHandlersEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowEventHandlersEventMap',
    },
    WindowEventHandlers: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowEventHandlers',
    },
    WindowLocalStorage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowLocalStorage',
    },
    WindowOrWorkerGlobalScope: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowOrWorkerGlobalScope',
    },
    WindowSessionStorage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowSessionStorage',
    },
    WorkerEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WorkerEventMap',
    },
    Worker: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Worker',
    },
    Worklet: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'Worklet',
    },
    WritableStream: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WritableStream',
    },
    WritableStreamDefaultController: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WritableStreamDefaultController',
    },
    WritableStreamDefaultWriter: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WritableStreamDefaultWriter',
    },
    XMLDocument: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XMLDocument',
    },
    XMLHttpRequestEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'XMLHttpRequestEventMap',
    },
    XMLHttpRequest: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XMLHttpRequest',
    },
    XMLHttpRequestEventTargetEventMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'XMLHttpRequestEventTargetEventMap',
    },
    XMLHttpRequestEventTarget: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XMLHttpRequestEventTarget',
    },
    XMLHttpRequestUpload: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XMLHttpRequestUpload',
    },
    XMLSerializer: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XMLSerializer',
    },
    XPathEvaluator: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XPathEvaluator',
    },
    XPathEvaluatorBase: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'XPathEvaluatorBase',
    },
    XPathExpression: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XPathExpression',
    },
    XPathResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XPathResult',
    },
    XSLTProcessor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'XSLTProcessor',
    },
    webkitRTCPeerConnection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'webkitRTCPeerConnection',
    },
    EventListenerOrEventListenerObject: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventListenerOrEventListenerObject',
    },
    Console: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Console',
    },
    CSS: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'CSS',
    },
    WebAssembly: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: true,
        name: 'WebAssembly',
    },
    BlobCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BlobCallback',
    },
    CustomElementConstructor: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CustomElementConstructor',
    },
    DecodeErrorCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DecodeErrorCallback',
    },
    DecodeSuccessCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DecodeSuccessCallback',
    },
    EventHandlerNonNull: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EventHandlerNonNull',
    },
    ForEachCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ForEachCallback',
    },
    FrameRequestCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FrameRequestCallback',
    },
    FunctionStringCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FunctionStringCallback',
    },
    IntersectionObserverCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IntersectionObserverCallback',
    },
    MSLaunchUriCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSLaunchUriCallback',
    },
    MutationCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MutationCallback',
    },
    NavigatorUserMediaErrorCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorUserMediaErrorCallback',
    },
    NavigatorUserMediaSuccessCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigatorUserMediaSuccessCallback',
    },
    NotificationPermissionCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationPermissionCallback',
    },
    OnBeforeUnloadEventHandlerNonNull: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OnBeforeUnloadEventHandlerNonNull',
    },
    OnErrorEventHandlerNonNull: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OnErrorEventHandlerNonNull',
    },
    PerformanceObserverCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PerformanceObserverCallback',
    },
    PositionCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PositionCallback',
    },
    PositionErrorCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PositionErrorCallback',
    },
    QueuingStrategySize: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'QueuingStrategySize',
    },
    RTCPeerConnectionErrorCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPeerConnectionErrorCallback',
    },
    RTCSessionDescriptionCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSessionDescriptionCallback',
    },
    RTCStatsCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStatsCallback',
    },
    ResizeObserverCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResizeObserverCallback',
    },
    TransformerFlushCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TransformerFlushCallback',
    },
    TransformerStartCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TransformerStartCallback',
    },
    TransformerTransformCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TransformerTransformCallback',
    },
    UnderlyingSinkAbortCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSinkAbortCallback',
    },
    UnderlyingSinkCloseCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSinkCloseCallback',
    },
    UnderlyingSinkStartCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSinkStartCallback',
    },
    UnderlyingSinkWriteCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSinkWriteCallback',
    },
    UnderlyingSourceCancelCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSourceCancelCallback',
    },
    UnderlyingSourcePullCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSourcePullCallback',
    },
    UnderlyingSourceStartCallback: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UnderlyingSourceStartCallback',
    },
    VoidFunction: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VoidFunction',
    },
    HTMLElementTagNameMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLElementTagNameMap',
    },
    HTMLElementDeprecatedTagNameMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLElementDeprecatedTagNameMap',
    },
    SVGElementTagNameMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SVGElementTagNameMap',
    },
    ElementTagNameMap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ElementTagNameMap',
    },
    HeadersInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HeadersInit',
    },
    BodyInit: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BodyInit',
    },
    RequestInfo: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestInfo',
    },
    BlobPart: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BlobPart',
    },
    DOMHighResTimeStamp: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMHighResTimeStamp',
    },
    RenderingContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RenderingContext',
    },
    HTMLOrSVGImageElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLOrSVGImageElement',
    },
    CanvasImageSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasImageSource',
    },
    OffscreenRenderingContext: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OffscreenRenderingContext',
    },
    MessageEventSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MessageEventSource',
    },
    HTMLOrSVGScriptElement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HTMLOrSVGScriptElement',
    },
    ImageBitmapSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageBitmapSource',
    },
    MediaProvider: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaProvider',
    },
    OnErrorEventHandler: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OnErrorEventHandler',
    },
    OnBeforeUnloadEventHandler: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OnBeforeUnloadEventHandler',
    },
    TimerHandler: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TimerHandler',
    },
    ConstrainULong: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainULong',
    },
    ConstrainDouble: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainDouble',
    },
    ConstrainBoolean: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainBoolean',
    },
    ConstrainDOMString: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ConstrainDOMString',
    },
    PerformanceEntryList: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PerformanceEntryList',
    },
    ReadableStreamReader: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamReader',
    },
    ReadableStreamController: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamController',
    },
    VibratePattern: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VibratePattern',
    },
    COSEAlgorithmIdentifier: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'COSEAlgorithmIdentifier',
    },
    UvmEntry: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UvmEntry',
    },
    UvmEntries: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UvmEntries',
    },
    AlgorithmIdentifier: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AlgorithmIdentifier',
    },
    HashAlgorithmIdentifier: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'HashAlgorithmIdentifier',
    },
    BigInteger: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BigInteger',
    },
    NamedCurve: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NamedCurve',
    },
    GLenum: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLenum',
    },
    GLboolean: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLboolean',
    },
    GLbitfield: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLbitfield',
    },
    GLint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLint',
    },
    GLsizei: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLsizei',
    },
    GLintptr: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLintptr',
    },
    GLsizeiptr: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLsizeiptr',
    },
    GLuint: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLuint',
    },
    GLfloat: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLfloat',
    },
    GLclampf: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLclampf',
    },
    TexImageSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TexImageSource',
    },
    Float32List: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Float32List',
    },
    Int32List: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Int32List',
    },
    GLint64: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLint64',
    },
    GLuint64: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GLuint64',
    },
    Uint32List: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Uint32List',
    },
    BufferSource: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BufferSource',
    },
    DOMTimeStamp: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMTimeStamp',
    },
    LineAndPositionSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'LineAndPositionSetting',
    },
    FormDataEntryValue: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FormDataEntryValue',
    },
    InsertPosition: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'InsertPosition',
    },
    IDBValidKey: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBValidKey',
    },
    MutationRecordType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MutationRecordType',
    },
    IDBKeyPath: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBKeyPath',
    },
    Transferable: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Transferable',
    },
    RTCIceGatherCandidate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGatherCandidate',
    },
    RTCTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCTransport',
    },
    MouseWheelEvent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MouseWheelEvent',
    },
    WindowProxy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WindowProxy',
    },
    ReadableStreamDefaultReadResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadableStreamDefaultReadResult',
    },
    AlignSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AlignSetting',
    },
    AnimationPlayState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AnimationPlayState',
    },
    AppendMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AppendMode',
    },
    AttestationConveyancePreference: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AttestationConveyancePreference',
    },
    AudioContextLatencyCategory: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioContextLatencyCategory',
    },
    AudioContextState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AudioContextState',
    },
    AuthenticatorAttachment: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AuthenticatorAttachment',
    },
    AuthenticatorTransport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AuthenticatorTransport',
    },
    AutoKeyword: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AutoKeyword',
    },
    AutomationRate: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'AutomationRate',
    },
    BinaryType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BinaryType',
    },
    BiquadFilterType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'BiquadFilterType',
    },
    CanPlayTypeResult: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanPlayTypeResult',
    },
    CanvasDirection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasDirection',
    },
    CanvasFillRule: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasFillRule',
    },
    CanvasLineCap: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasLineCap',
    },
    CanvasLineJoin: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasLineJoin',
    },
    CanvasTextAlign: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasTextAlign',
    },
    CanvasTextBaseline: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CanvasTextBaseline',
    },
    ChannelCountMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ChannelCountMode',
    },
    ChannelInterpretation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ChannelInterpretation',
    },
    ClientTypes: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ClientTypes',
    },
    ColorSpaceConversion: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ColorSpaceConversion',
    },
    CompositeOperation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CompositeOperation',
    },
    CompositeOperationOrAuto: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CompositeOperationOrAuto',
    },
    CredentialMediationRequirement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'CredentialMediationRequirement',
    },
    DOMParserSupportedType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DOMParserSupportedType',
    },
    DirectionSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DirectionSetting',
    },
    DisplayCaptureSurfaceType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DisplayCaptureSurfaceType',
    },
    DistanceModelType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DistanceModelType',
    },
    DocumentReadyState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'DocumentReadyState',
    },
    EndOfStreamError: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EndOfStreamError',
    },
    EndingType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'EndingType',
    },
    FillMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FillMode',
    },
    FullscreenNavigationUI: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'FullscreenNavigationUI',
    },
    GamepadHand: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GamepadHand',
    },
    GamepadHapticActuatorType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GamepadHapticActuatorType',
    },
    GamepadMappingType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'GamepadMappingType',
    },
    IDBCursorDirection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBCursorDirection',
    },
    IDBRequestReadyState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBRequestReadyState',
    },
    IDBTransactionMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IDBTransactionMode',
    },
    ImageOrientation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageOrientation',
    },
    ImageSmoothingQuality: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ImageSmoothingQuality',
    },
    IterationCompositeOperation: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'IterationCompositeOperation',
    },
    KeyFormat: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyFormat',
    },
    KeyType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyType',
    },
    KeyUsage: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'KeyUsage',
    },
    LineAlignSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'LineAlignSetting',
    },
    ListeningState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ListeningState',
    },
    MSCredentialType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSCredentialType',
    },
    MSTransportType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSTransportType',
    },
    MSWebViewPermissionState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSWebViewPermissionState',
    },
    MSWebViewPermissionType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MSWebViewPermissionType',
    },
    MediaDeviceKind: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaDeviceKind',
    },
    MediaKeyMessageType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeyMessageType',
    },
    MediaKeySessionType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeySessionType',
    },
    MediaKeyStatus: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeyStatus',
    },
    MediaKeysRequirement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaKeysRequirement',
    },
    MediaStreamTrackState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'MediaStreamTrackState',
    },
    NavigationReason: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigationReason',
    },
    NavigationType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NavigationType',
    },
    NotificationDirection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationDirection',
    },
    NotificationPermission: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'NotificationPermission',
    },
    OffscreenRenderingContextId: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OffscreenRenderingContextId',
    },
    OrientationLockType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OrientationLockType',
    },
    OrientationType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OrientationType',
    },
    OscillatorType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OscillatorType',
    },
    OverSampleType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'OverSampleType',
    },
    PanningModelType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PanningModelType',
    },
    PaymentComplete: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentComplete',
    },
    PaymentShippingType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PaymentShippingType',
    },
    PermissionName: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PermissionName',
    },
    PermissionState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PermissionState',
    },
    PlaybackDirection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PlaybackDirection',
    },
    PositionAlignSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PositionAlignSetting',
    },
    PremultiplyAlpha: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PremultiplyAlpha',
    },
    PublicKeyCredentialType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PublicKeyCredentialType',
    },
    PushEncryptionKeyName: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PushEncryptionKeyName',
    },
    PushPermissionState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'PushPermissionState',
    },
    RTCBundlePolicy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCBundlePolicy',
    },
    RTCDataChannelState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDataChannelState',
    },
    RTCDegradationPreference: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDegradationPreference',
    },
    RTCDtlsRole: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtlsRole',
    },
    RTCDtlsTransportState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtlsTransportState',
    },
    RTCDtxStatus: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCDtxStatus',
    },
    RTCErrorDetailType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCErrorDetailType',
    },
    RTCIceCandidateType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCandidateType',
    },
    RTCIceComponent: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceComponent',
    },
    RTCIceConnectionState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceConnectionState',
    },
    RTCIceCredentialType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceCredentialType',
    },
    RTCIceGatherPolicy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGatherPolicy',
    },
    RTCIceGathererState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGathererState',
    },
    RTCIceGatheringState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceGatheringState',
    },
    RTCIceProtocol: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceProtocol',
    },
    RTCIceRole: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceRole',
    },
    RTCIceTcpCandidateType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceTcpCandidateType',
    },
    RTCIceTransportPolicy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceTransportPolicy',
    },
    RTCIceTransportState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCIceTransportState',
    },
    RTCPeerConnectionState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPeerConnectionState',
    },
    RTCPriorityType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCPriorityType',
    },
    RTCRtcpMuxPolicy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtcpMuxPolicy',
    },
    RTCRtpTransceiverDirection: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCRtpTransceiverDirection',
    },
    RTCSctpTransportState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSctpTransportState',
    },
    RTCSdpType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSdpType',
    },
    RTCSignalingState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCSignalingState',
    },
    RTCStatsIceCandidatePairState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStatsIceCandidatePairState',
    },
    RTCStatsIceCandidateType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStatsIceCandidateType',
    },
    RTCStatsType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RTCStatsType',
    },
    ReadyState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReadyState',
    },
    ReferrerPolicy: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ReferrerPolicy',
    },
    RequestCache: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestCache',
    },
    RequestCredentials: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestCredentials',
    },
    RequestDestination: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestDestination',
    },
    RequestMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestMode',
    },
    RequestRedirect: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'RequestRedirect',
    },
    ResidentKeyRequirement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResidentKeyRequirement',
    },
    ResizeObserverBoxOptions: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResizeObserverBoxOptions',
    },
    ResizeQuality: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResizeQuality',
    },
    ResponseType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ResponseType',
    },
    ScopedCredentialType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScopedCredentialType',
    },
    ScrollBehavior: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollBehavior',
    },
    ScrollLogicalPosition: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollLogicalPosition',
    },
    ScrollRestoration: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollRestoration',
    },
    ScrollSetting: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ScrollSetting',
    },
    SelectionMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SelectionMode',
    },
    ServiceWorkerState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerState',
    },
    ServiceWorkerUpdateViaCache: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ServiceWorkerUpdateViaCache',
    },
    ShadowRootMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'ShadowRootMode',
    },
    SpeechRecognitionErrorCode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechRecognitionErrorCode',
    },
    SpeechSynthesisErrorCode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'SpeechSynthesisErrorCode',
    },
    TextTrackKind: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextTrackKind',
    },
    TextTrackMode: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TextTrackMode',
    },
    TouchType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'TouchType',
    },
    Transport: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'Transport',
    },
    UserVerificationRequirement: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'UserVerificationRequirement',
    },
    VRDisplayEventReason: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VRDisplayEventReason',
    },
    VideoFacingModeEnum: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VideoFacingModeEnum',
    },
    VisibilityState: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'VisibilityState',
    },
    WebGLPowerPreference: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WebGLPowerPreference',
    },
    WorkerType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'WorkerType',
    },
    XMLHttpRequestResponseType: {
        eslintImplicitGlobalSetting: 'readonly',
        isTypeVariable: true,
        isValueVariable: false,
        name: 'XMLHttpRequestResponseType',
    },
>>>>>>> e9ad4b14254baba7a18db55e01787715cfba094c
};
//# sourceMappingURL=dom.js.map